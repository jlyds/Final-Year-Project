<!DOCTYPE html>
<!-- saved from url=(0076)http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/ -->
<html class=" js flexbox canvas canvastext webgl touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths" lang="en-US" xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="http://www.facebook.com/2008/fbml"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">

		<title>MonoBrick Communication Library Programming Guide | MonoBrick.DK</title>

		<link rel="profile" href="http://gmpg.org/xfn/11">
		<link rel="pingback" href="http://www.monobrick.dk/xmlrpc.php">

		<link rel="alternate" type="application/rss+xml" title="MonoBrick.DK » Feed" href="http://www.monobrick.dk/feed/">
<link rel="alternate" type="application/rss+xml" title="MonoBrick.DK » Comments Feed" href="http://www.monobrick.dk/comments/feed/">

            <div class="fit-vids-style">­<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style></div><script src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/cb=gapi.loaded_1" async=""></script><script src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/cb=gapi.loaded_0" async=""></script><script type="text/javascript" async="" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/ga.js"></script><script type="text/javascript" async="" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/ga.js"></script><script type="text/javascript">//<![CDATA[
            // Google Analytics for WordPress by Yoast v4.3.5 | http://yoast.com/wordpress/google-analytics/
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-42606992-1']);
				            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
            //]]></script>
			<link rel="alternate" type="application/rss+xml" title="MonoBrick.DK » MonoBrick Communication Library Programming Guide Comments Feed" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/feed/">
<link rel="stylesheet" id="miniAudioPlayer-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/miniplayer.css" type="text/css" media="screen">
<link rel="stylesheet" id="wp-quicklatex-format-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/quicklatex-format.css" type="text/css" media="all">
<link rel="stylesheet" id="bbp-default-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/bbpress.css" type="text/css" media="screen">
<link rel="stylesheet" id="thickbox-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/thickbox.css" type="text/css" media="all">
<link rel="stylesheet" id="wpdm-front-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/front.css" type="text/css" media="all">
<link rel="stylesheet" id="meteor-slides-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/meteor-slides.css" type="text/css" media="all">
<link rel="stylesheet" id="social-widget-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/social_widget.css" type="text/css" media="all">
<link rel="stylesheet" id="responsive-style-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/style.css" type="text/css" media="all">
<link rel="stylesheet" id="responsive-media-queries-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/style(1).css" type="text/css" media="all">
<link rel="stylesheet" id="responsive-child-style-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/style(2).css" type="text/css" media="all">
<link rel="stylesheet" id="fancybox-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.fancybox-1.3.6.pack.css" type="text/css" media="screen">
<link rel="stylesheet" id="page-list-style-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/page-list.css" type="text/css" media="all">
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery-migrate.min.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.jplayer.min.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.mb.miniPlayer.js"></script><script type="text/vbscript">
Function IEBinary_getByteAt(strBinary, iOffset)
	IEBinary_getByteAt = AscB(MidB(strBinary,iOffset+1,1))
End Function
Function IEBinary_getLength(strBinary)
	IEBinary_getLength = LenB(strBinary)
End Function
</script>

<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/responsive-modernizr.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/comment-reply.min.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.cycle.all.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.metadata.v2.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.touchwipe.1.1.1.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var meteorslidessettings = {"meteorslideshowspeed":"2000","meteorslideshowduration":"3000","meteorslideshowheight":"400","meteorslideshowwidth":"500","meteorslideshowtransition":"blindX"};
/* ]]> */
</script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/slideshow.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/wp-quicklatex-frontend.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.monobrick.dk/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.monobrick.dk/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="MonoBrick Tunnel for Android" href="http://www.monobrick.dk/software/android-tunnel/">
<link rel="next" title="C++ Library" href="http://www.monobrick.dk/software/c-library/">
<meta name="generator" content="WordPress 3.7.4">
<link rel="shortlink" href="http://www.monobrick.dk/?p=1496">
    <script language="JavaScript">
    <!--
      jQuery(function(){
          
          jQuery('.wpdm-popup').click(function(){
              tb_show(jQuery(this).html(),this.href+'&modal=1&width=600&height=400');
              return false;
          });
          
          jQuery('.haspass').click(function(){
              var url = jQuery(this).attr('href');
              var id = jQuery(this).attr('rel');
              var password = jQuery('#pass_'+id).val();
              jQuery.post('http://www.monobrick.dk/',{download:id,password:password},function(res){
                  
                  if(res=='error') {
                    
                      jQuery('#wpdm_file_'+id+' .perror').html('Wrong Password');
                      setTimeout("jQuery('#wpdm_file_"+id+" .perror').html('');",3000);
                      return false;
                  } else {
                      location.href = 'http://www.monobrick.dk/?wpdmact=process&did='+res;
                  }
                  //if(res.url!='undefined') location.href=res.url;
                                           
              });
               
              return false;
          });
      })
    //-->
    </script>
    	<link href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/SyntaxHighlighter.css" type="text/css" rel="stylesheet">
	<!-- This site is powered by Tweet, Like, Plusone and Share Plugin - http://techxt.com/tweet-like-google-1-and-share-plugin-wordpress/ -->
	<meta property="og:type" content="article">
	<meta property="og:title" content="MonoBrick Communication Library Programming Guide">
	<meta property="og:url" content="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/">
	<meta property="og:site_name" content="MonoBrick.DK">
	<meta property="og:description" content="This guide descries how to use the MonoBrick communication library with the EV3. Users of the NXT can also use this guide as inspiration as the syntax for the N">
	<!--[if lt IE 9]>
  <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->
			<meta property="og:image" content="http://www.monobrick.dk/wp-content/uploads/2013/02/monobrickLogo100.png">
	<style type="text/css">div.socialicons{float:left;display:block;margin-right: 10px;line-height: 1;}div.socialiconsv{line-height: 1;}div.socialicons p{margin-bottom: 0px !important;margin-top: 0px !important;padding-bottom: 0px !important;padding-top: 0px !important;}div.social4iv{background: none repeat scroll 0 0 #FFFFFF;border: 1px solid #aaa;border-radius: 3px 3px 3px 3px;box-shadow: 3px 3px 3px #DDDDDD;padding: 3px;position: fixed;text-align: center;top: 55px;width: 68px;display:none;}div.socialiconsv{padding-bottom: 5px;}</style>
<link rel="stylesheet" id="wsl_css-css" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/style(3).css" type="text/css" media="all">
<!-- We need this for debugging -->
<!-- Responsive 1.9.3.9 -->
<!-- Responsive Child Theme 1.0.0 -->

<!-- All in One SEO Pack 2.1.4 by Michael Torbert of Semper Fi Web Design[1065,1129] -->
<meta name="description" content="This guide descries how to use the MonoBrick communication library with the EV3. Users of the NXT can also use this guide as inspiration as the syntax for the">

<link rel="canonical" href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/MonoBrick Communication Library Programming Guide   MonoBrick.DK.htm">
<meta property="og:title" content="MonoBrick Communication Library Programming Guide | MonoBrick.DK">
<meta property="og:type" content="article">
<meta property="og:url" content="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/">
<meta property="og:image" content="http://www.monobrick.dk/wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png">
<meta property="og:site_name" content="MonoBrick.DK">
<meta property="og:description" content="This guide descries how to use the MonoBrick communication library with the EV3. Users of the NXT can also use this guide as inspiration as the syntax for the NXT is very similar. Be sure to check the MonoBrick communication library documentation for a complete list of all functionalities for both the EV3 and NXT. This guide contains the following sections.  Connecting to the brick Controlling motors Controlling a vehicle Reading sensor values Using the filesystem Miscellaneous  Connecting to the Brick The examples in this sections shows how to establish a connection to both the EV3 and NXT brick. Before proceeding please make sure that you are able to communicate with the brick. Mac Os and Linux uses will also have to make sure that Mono is installed. The set-up guides found here will help you setup communication under Windows, Linux and Mac OS for use with the MonoBrick communication library. USB connection To create a USB connection make sure that you have copied the libusb and the">
<meta name="twitter:card" content="summary">
<meta name="twitter:description" content="This guide descries how to use the MonoBrick communication library with the EV3. Users of the NXT can also use this guide as inspiration as the syntax for the NXT is very similar. Be sure to check the MonoBrick communication library documentation for a complete list of all functionalities for both the EV3 and NXT. This guide contains the following sections.  Connecting to the brick Controlling motors Controlling a vehicle Reading sensor values Using the filesystem Miscellaneous  Connecting to the Brick The examples in this sections shows how to establish a connection to both the EV3 and NXT brick. Before proceeding please make sure that you are able to communicate with the brick. Mac Os and Linux uses will also have to make sure that Mono is installed. The set-up guides found here will help you setup communication under Windows, Linux and Mac OS for use with the MonoBrick communication library. USB connection To create a USB connection make sure that you have copied the libusb and the">
		<script type="text/javascript">
		  var _gaq = _gaq || [];
		  _gaq.push(['_setAccount', 'UA-42606992-1']);
		  _gaq.push(['_trackPageview']);
		  (function() {
		    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
		  })();
		</script>
<!-- /all in one seo pack -->
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; background-image: url('http://www.mindstorms.dk/wp-content/uploads/2012/12/background.jpg'); background-repeat: repeat; background-position: top left; background-attachment: fixed; }
</style>
<!-- Custom CSS Styles -->
<style type="text/css" media="screen">
/* =Download
-------------------------------------------------------------- */
.btn_outer{
    width:150px;
    color: #6e6e6e;
    font: bold 12px Helvetica, Arial, sans-serif;
    text-decoration: none;
    padding: 4px 12px 4px 3px;
    position: relative;
    text-shadow: 0 1px 0 #fff;
    -webkit-transition: border-color .218s;
    -moz-transition: border .218s;
    -o-transition: border-color .218s;
    transition: border-color .218s;
    background: #f3f3f3;
    background: -webkit-gradient(linear,0% 40%,0% 70%,from(#F5F5F5),to(#F1F1F1));
    background: -moz-linear-gradient(linear,0% 40%,0% 70%,from(#F5F5F5),to(#F1F1F1));
    border: solid 1px #dcdcdc;
    border-radius: 2px;
    -webkit-border-radius: 2px;
    -moz-border-radius: 2px;
    top:-10px;
}

div.downloadbox 
{
    text-align: center;
    width: 180px;/*hack for IE*/   
    margin: 0 auto;
}
div.downloadbox table 
{
   text-align: center;
   width: 180px;/*hack for IE*/   
   margin: 0 auto;
   
}
/* =Disable post tags
-------------------------------------------------------------- */

.post-meta {
   display:none;
}

.widget-wrapper{
    border-width: 1px;	
    border-style: solid ;
    border-color: #F26100;
     
}


/*#wrapper {
    border-width: 1px;	
    border-style: solid ;
    border-color: #F26100;
}*/


/* =Primary Menu
-------------------------------------------------------------- */
.menu {    
    background-color:#FF8E44;
    background-image:-webkit-gradient(linear, left top, left bottom, from(#FF8E44), to(#F26100));
    background-image:-webkit-linear-gradient(top, #FF8E44, #F26100);    
    background-image:-moz-linear-gradient(top, #FF8E44, #F26100);
    background-image:-ms-linear-gradient(top, #FF8E44, #F26100);
    background-image:-o-linear-gradient(top, #FF8E44, #F26100);
    background-image:linear-gradient(top, #FF8E44, #F26100);
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#FF8E44, endColorstr=#F26100);
    
}

.menu a:hover {
   background: none repeat scroll 00 #FF8E44 !important; 
   background-color: #FF8E44; 
   background-image: none; 
   filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#FF8E44,   endColorstr=#FF8E44);
}

.menu .current_page_item a {
  background:#999999;
  color:#ffffff;
}

.menu li li {
   background:#999999;
   border-bottom:1px solid #ccc;
   color:#ffffff;
   width:auto;
}
.menu li li a {
    border:none;
    color:#ffffff;
    font-size:12px;
    font-weight:400;
    height:auto;
    line-height:20px;
    min-height:28px;
    padding:8px 10px 0 10px;
}
.menu li li a:hover {    
   background:#ffffff;    
   border:none;    
   color:#333;
}

ul.menu > li:hover {
   background-color: #FF8E44;
   color: #ffffff;
}

.menu a {
    border-color: #FF8E44;
   text-shadow: 0 0px 0px;
}

/* =Gallery
-------------------------------------------------------------- */
.gallery {
    margin:0 auto 0px;
    text-align:center;
    width:110%;
}

.gallery .gallery-item {
float : center;
width:150px;
height:200px;
margin-left:20px;
margin-right:20px;
display:inline-block;
}

.gallery img {
    border:0px solid #ddd;
}

.gallery .gallery-caption {
    font-size:12px;
    margin:0 0 12px;
}

.gallery dl {
    margin:0;
}

.gallery br+br {
    display:none;
}

.attachment-gallery img {
    background:#fff;
    border:1px solid #f0f0f0;
    display:block;
    height:auto;
    margin:15px auto;
    max-width:96%;
    padding:5px;
    width:auto;
}

.gallery-meta .full-size, .gallery-meta .aperture, .gallery-meta .focal-length, .gallery-meta .iso, .gallery-meta .shutter, .gallery-meta .camera {
    display:block;
}

/* =Widgets
-------------------------------------------------------------- */

.widget-title, 
.widget-title-home h3 {
	display: block;
	font-size: 24px;
	font-weight: 700;
	line-height: 23px;
	margin: 0;
	padding: 0 0 20px 0;
	text-align: center;
        color:#999999;
}

/* =Header
-------------------------------------------------------------- */
h1, h2, h3, h4, h5, h6, h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
	font-weight: 700;
	line-height: 1.0em;
        word-wrap: break-word;
}

h1 {
    font-size: 2.625em; /* = 42px */
    margin-bottom: .5em;
    margin-top: .5em;
color:#999999;
}

h2 {
    font-size: 2.250em; /* = 36px */
    margin-bottom: .75em;
    margin-top: .75em;
color:#999999;
}

h3 {
    font-size: 1.875em; /* = 30px */
    margin-bottom: .857em;
    margin-top: .857em;
color:#999999;
}

h4 {
    font-size: 1.500em; /* = 24px */
    margin-bottom: 1em;
    margin-top: 1em;
color:#999999;
}

h5 {
    font-size: 1.125em; /* = 18px */
    margin-bottom: 1.125em;
    margin-top: 1.125em;
color:#999999;
}

h6 {
    font-size: 1.000em; /* = 16px */
    margin-bottom: 1.285em;
    margin-top: 1.285em;
color:#999999;
}


/* =Links
-------------------------------------------------------------- */
a {
    color:#F26100;
    font-weight:400;
    text-decoration:none;
}

a:hover,
a:focus,
a:active {
     color: #FF8E44;
     text-decoration:none;
}

::selection {
	background: #999;
    color: #fff;
	text-shadow: none;
}

/* =Widget social icons
-------------------------------------------------------------- */
.smw_left {
	text-align: center;
}

/* =Tables for building instructions
-------------------------------------------------------------- */
div.bibox, 
div.bibox th, 
div.bibox td,
div.bibox table {
	border: 0px solid #ddd;
}

.player-container{visibility:hidden;border:none;height:30px;width:200px;padding:0 20px 20px 0;}


/* =Featured Content
-------------------------------------------------------------- */
#featured {
	-moz-border-radius: 4px;
	-webkit-border-radius: 4px;
	background-color: #fff;
	border: 1px solid #e5e5e5;
	border-radius: 4px;
	padding-bottom: 40px;
	width: 99.893617021277%;
}

#featured p {
	font-size: 18px;
	font-weight: 200;
	line-height: 27px;
	padding: 0 40px 0 40px;
	text-align: justify;
}

#featured-image {
	margin: 40px 0 0 0;
}

#featured-image .fluid-width-video-wrapper {
	margin-left: -20px;
}

.featured-image img {
	margin-top: 44px;
}
</style>

	<!-- Easy FancyBox 1.5.6 using FancyBox 1.3.6 - RavanH (http://status301.net/wordpress-plugins/easy-fancybox/) -->
	<script type="text/javascript">
	/* <![CDATA[ */
	var fb_timeout = null;
	var fb_opts = { 'overlayShow' : true, 'hideOnOverlayClick' : true, 'showCloseButton' : true, 'centerOnScroll' : true, 'enableEscapeButton' : true, 'autoScale' : true };
	var easy_fancybox_handler = function(){
	/* IMG */
	var fb_IMG_select = 'a[href*=".jpg"]:not(.nofancybox), area[href*=".jpg"]:not(.nofancybox), a[href*=".gif"]:not(.nofancybox), area[href*=".gif"]:not(.nofancybox), a[href*=".png"]:not(.nofancybox), area[href*=".png"]:not(.nofancybox)';
	jQuery(fb_IMG_select).addClass('fancybox');
	var fb_IMG_sections = jQuery('div.gallery');
	fb_IMG_sections.each(function() { jQuery(this).find(fb_IMG_select).attr('rel', 'gallery-' + fb_IMG_sections.index(this)); });
	jQuery('a.fancybox, area.fancybox, li.fancybox a:not(li.nofancybox a)').fancybox( jQuery.extend({}, fb_opts, { 'transitionIn' : 'elastic', 'easingIn' : 'easeOutBack', 'transitionOut' : 'elastic', 'easingOut' : 'easeInBack', 'opacity' : false, 'hideOnContentClick' : false, 'titleShow' : false, 'titlePosition' : 'over', 'titleFromAlt' : true, 'showNavArrows' : true, 'enableKeyboardNav' : true, 'cyclic' : false }) );
	/* Auto-click */ 
	jQuery('#fancybox-auto').trigger('click');
	}
	/* ]]> */
	</script>
	<style type="text/css">
.fancybox-hidden{display:none}.rtl #fancybox-left{left:auto;right:0px}.rtl #fancybox-right{left:0px;right:auto}.rtl #fancybox-right-ico{background-position:-40px -30px}.rtl #fancybox-left-ico{background-position:-40px -60px}.rtl .fancybox-title-over{text-align:right}.rtl #fancybox-left-ico,.rtl #fancybox-right-ico{right:-9999px}.rtl #fancybox-right:hover span{right:auto;left:20px}.rtl #fancybox-left:hover span{right:20px}#fancybox-img{max-width:none;max-height:none}
	</style>
	<!--[if lt IE 8]>            
		<style type="text/css">
.fancybox-ie6 #fancybox-close{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_close.png",sizingMethod="scale")}
.fancybox-ie6 #fancybox-left-ico{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_nav_left.png",sizingMethod="scale")}
.fancybox-ie6 #fancybox-right-ico{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_nav_right.png",sizingMethod="scale")}
.fancybox-ie6 #fancybox-title-over{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_title_over.png",sizingMethod="scale");zoom:1}
.fancybox-ie6 #fancybox-title-float-left{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_title_left.png",sizingMethod="scale")}
.fancybox-ie6 #fancybox-title-float-main{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_title_main.png",sizingMethod="scale")}
.fancybox-ie6 #fancybox-title-float-right{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_title_right.png",sizingMethod="scale")}
.fancybox-ie6 #fancybox-bg-w,.fancybox-ie6 #fancybox-bg-e,.fancybox-ie6 #fancybox-left,.fancybox-ie6 #fancybox-right,#fancybox-hide-sel-frame{height:expression(this.parentNode.clientHeight+"px")}
#fancybox-loading.fancybox-ie6{position:absolute;margin-top:0;top:expression((-20+(document.documentElement.clientHeight ? document.documentElement.clientHeight/2 : document.body.clientHeight/2)+(ignoreMe=document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop))+"px")}
#fancybox-loading.fancybox-ie6 div{background:transparent;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_loading.png", sizingMethod="scale")}
.fancybox-ie #fancybox-bg-n{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_n.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-ne{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_ne.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-e{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_e.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-se{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_se.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-s{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_s.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-sw{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_sw.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-w{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_w.png",sizingMethod="scale")}
.fancybox-ie #fancybox-bg-nw{filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_nw.png",sizingMethod="scale")}
		</style>
	<![endif]-->
	<!--[if IE 8]>            
		<style type="text/css">
.fancybox-ie #fancybox-bg-n{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_n.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-ne{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_ne.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-e{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_e.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-se{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_se.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-s{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_s.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-sw{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_sw.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-w{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_w.png",sizingMethod="scale")'}
.fancybox-ie #fancybox-bg-nw{-ms-filter:'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://www.monobrick.dk/wp-content/plugins/easy-fancybox/fancybox/fancy_shadow_nw.png",sizingMethod="scale")'}
		</style>
	<![endif]-->
<style type="text/css">
.paypal-donations { text-align: center !important }
</style>
	<script src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/secureAnonymousFramework"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}.fb_dialog_loader{background-color:#f2f2f2;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3b5998;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29447e;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f2f2f2;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fbpluginrecommendationsbarleft,.fbpluginrecommendationsbarright{position:fixed !important;bottom:0;z-index:999}.fbpluginrecommendationsbarleft{left:10px}.fbpluginrecommendationsbarright{right:10px}</style><style type="text/css">* html #li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link{height:1% !important;}#li_ui_li_gen_1410754772793_0{position:relative !important;overflow:visible !important;display:block !important;}#li_ui_li_gen_1410754772793_0 span{-webkit-box-sizing:content-box !important;-moz-box-sizing:content-box !important;box-sizing:content-box !important;}#li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link{border:0 !important;height:20px !important;text-decoration:none !important;padding:0 !important;margin:0 !important;display:inline-block !important;}#li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link:link, #li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link:visited, #li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link:hover, #li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link:active{border:0 !important;text-decoration:none !important;}#li_ui_li_gen_1410754772793_0 a#li_ui_li_gen_1410754772793_0-link:after{content:"." !important;display:block !important;clear:both !important;visibility:hidden !important;line-height:0 !important;height:0 !important;}#li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-logo{background-image:url(https://static.licdn.com/scds/common/u/images/apps/connect/sprites/sprite_connect_v14.png) !important;background-position:0px -276px !important;background-repeat:no-repeat !important;background-size:initial !important;cursor:pointer !important;border:0 !important;text-indent:-9999em !important;overflow:hidden !important;padding:0 !important;margin:0 !important;position:absolute !important;left:0px !important;top:0px !important;display:block !important;width:20px !important;height:20px !important;float:right !important;border-radius:0 !important;-webkit-border-radius:0 !important;border-top-right-radius:2px !important;border-bottom-right-radius:2px !important;-webkit-border-top-right-radius:2px !important;-webkit-border-bottom-right-radius:2px !important;}#li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-logo{background-position:-20px -276px !important;}#li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-logo, #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-logo{background-position:-40px -276px !important;}.IN-shadowed #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-logo{}#li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title{color:#333 !important;cursor:pointer !important;display:block !important;white-space:nowrap !important;float:left !important;margin-left:1px !important;vertical-align:top !important;overflow:hidden !important;text-align:center !important;height:18px !important;padding:0 4px 0 23px !important;border:1px solid #000 !important;border-top-color:#E2E2E2 !important;border-right-color:#BFBFBF !important;border-bottom-color:#B9B9B9 !important;border-left-color:#E2E2E2 !important;border-left:0 !important;text-shadow:#FFFFFF -1px 1px 0 !important;line-height:20px !important;border-radius:0 !important;-webkit-border-radius:0 !important;border-top-right-radius:2px !important;border-bottom-right-radius:2px !important;-webkit-border-top-right-radius:2px !important;-webkit-border-bottom-right-radius:2px !important;background-color:#ECECEC !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#FEFEFE), color-stop(100%,#ECECEC)) !important; background-image: -webkit-linear-gradient(top, #FEFEFE 0%, #ECECEC 100%) !important;}#li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title{border:1px solid #000 !important;border-top-color:#ABABAB !important;border-right-color:#9A9A9A !important;border-bottom-color:#787878 !important;border-left-color:#04568B !important;border-left:0 !important;background-color:#EDEDED !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#EDEDED), color-stop(100%,#DEDEDE)) !important; background-image: -webkit-linear-gradient(top, #EDEDED 0%, #DEDEDE 100%) !important;}#li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title, #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title{color:#666 !important;border:1px solid #000 !important;border-top-color:#B6B6B6 !important;border-right-color:#B3B3B3 !important;border-bottom-color:#9D9D9D !important;border-left-color:#49627B !important;border-left:0 !important;background-color:#DEDEDE !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#E3E3E3), color-stop(100%,#EDEDED)) !important; background-image: -webkit-linear-gradient(top, #E3E3E3 0%, #EDEDED 100%) !important;}.IN-shadowed #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title{}.IN-shadowed #li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title{}.IN-shadowed #li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title, .IN-shadowed #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title{}#li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title-text, #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title-text *{color:#333 !important;font-size:11px !important;font-family:Arial, sans-serif !important;font-weight:bold !important;font-style:normal !important;-webkit-font-smoothing:antialiased !important;display:inline-block !important;background:transparent none !important;vertical-align:top !important;height:18px !important;line-height:20px !important;float:none !important;}#li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title-text strong{font-weight:bold !important;}#li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title-text em{font-style:italic !important;}#li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title-text, #li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title-text *{color:#000 !important;}#li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title-text, #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title-text, #li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title-text *, #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title-text *{color:#666 !important;}#li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title #li_ui_li_gen_1410754772793_0-mark{display:inline-block !important;width:0px !important;overflow:hidden !important;}.success #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title{color:#333 !important;border-top-color:#E2E2E2 !important;border-right-color:#BFBFBF !important;border-bottom-color:#B9B9B9 !important;border-left-color:#E2E2E2 !important;background-color:#ECECEC !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#FEFEFE), color-stop(100%,#ECECEC)) !important; background-image: -webkit-linear-gradient(top, #FEFEFE 0%, #ECECEC 100%) !important;}.success #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title-text, .success #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title-text *{color:#333 !important;}.IN-shadowed .success #li_ui_li_gen_1410754772793_0 #li_ui_li_gen_1410754772793_0-title{}.success #li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title{color:#000 !important;border-top-color:#ABABAB !important;border-right-color:#9A9A9A !important;border-bottom-color:#787878 !important;border-left-color:#04568B !important;background-color:#EDEDED !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#EDEDED), color-stop(100%,#DEDEDE)) !important; background-image: -webkit-linear-gradient(top, #EDEDED 0%, #DEDEDE 100%) !important;}.success #li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title-text, .success #li_ui_li_gen_1410754772793_0.hovered #li_ui_li_gen_1410754772793_0-title-text *{color:#000 !important;}.success #li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title, .success #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title{color:#666 !important;border-top-color:#B6B6B6 !important;border-right-color:#B3B3B3 !important;border-bottom-color:#9D9D9D !important;border-left-color:#49627B !important;background-color:#DEDEDE !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#E3E3E3), color-stop(100%,#EDEDED)) !important; background-image: -webkit-linear-gradient(top, #E3E3E3 0%, #EDEDED 100%) !important;}.success #li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title-text, .success #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title-text, .success #li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title-text *, .success #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title-text *{color:#666 !important;}.IN-shadowed .success #li_ui_li_gen_1410754772793_0.clicked #li_ui_li_gen_1410754772793_0-title, .IN-shadowed .success #li_ui_li_gen_1410754772793_0.down #li_ui_li_gen_1410754772793_0-title{}#li_ui_li_gen_1410754772803_1-container.IN-right {display:inline-block !important;float:left !important;overflow:visible !important;position:relative !important;height:18px !important;padding-left:2px !important;line-height:1px !important;cursor:pointer !important;}#li_ui_li_gen_1410754772803_1.IN-right {display:block !important;float:left !important;height:18px !important;margin-right:4px !important;padding-right:4px !important;background-image:url(https://static.licdn.com/scds/common/u/images/apps/connect/sprites/sprite_connect_v14.png) !important;background-color:transparent !important;background-repeat:no-repeat !important;background-position:right -100px !important;}#li_ui_li_gen_1410754772803_1-inner.IN-right {display:block !important;float:left !important;padding-left:8px !important;text-align:center !important;background-image:url(https://static.licdn.com/scds/common/u/images/apps/connect/sprites/sprite_connect_v14.png) !important;background-color:transparent !important;background-repeat:no-repeat !important;background-position:0px -60px !important;}#li_ui_li_gen_1410754772803_1-content.IN-right {display:inline !important;font-size:11px !important;color:#04558B !important;font-weight:bold !important;font-family:Arial, sans-serif !important;line-height:18px !important;padding:0 5px 0 5px !important;}#li_ui_li_gen_1410754772803_1-container.IN-empty {display:none !important;}#li_ui_li_gen_1410754772803_1-container.IN-hidden #li_ui_li_gen_1410754772803_1 {display:none !important;}</style></head>

<body class="page page-id-1496 page-child parent-pageid-4635 page-template-default custom-background" data-twttr-rendered="true" style="">

<div id="container" class="hfeed">

	<div id="header">

		
		
		
		
			<div id="logo">
				<a href="http://www.monobrick.dk/"><img src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/cropped-Logo.png" width="646" height="100" alt="MonoBrick.DK"></a>
			</div><!-- end of #logo -->

		
		
				<div class="main-nav"><div id="responsive_current_menu_item">MonoBrick Communication Library Programming Guide</div><ul id="menu-menu" class="menu"><li id="menu-item-502" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-502"><a href="http://www.monobrick.dk/">Home</a></li>
<li id="menu-item-500" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-500"><a href="http://www.monobrick.dk/news/">News</a></li>
<li id="menu-item-559" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-559"><a href="http://www.monobrick.dk/software/">Software</a>
<ul class="sub-menu">
	<li id="menu-item-3630" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3630"><a href="http://www.monobrick.dk/software/ev3firmware/">MonoBrick EV3 Firmware</a></li>
	<li id="menu-item-1322" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1322"><a href="http://www.monobrick.dk/software/monobrick/">MonoBrick Communication Library</a></li>
	<li id="menu-item-562" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-562"><a href="http://www.monobrick.dk/software/remote/">MonoBrick Remote</a></li>
	<li id="menu-item-2418" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2418"><a href="http://www.monobrick.dk/software/monobrick-remote-for-android/">MonoBrick Remote For Android</a></li>
	<li id="menu-item-1329" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1329"><a href="http://www.monobrick.dk/software/bricktunnel/">MonoBrick Tunnel</a></li>
	<li id="menu-item-2129" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2129"><a href="http://www.monobrick.dk/software/android-tunnel/">MonoBrick Tunnel for Android</a></li>
	<li id="menu-item-1983" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1983"><a href="http://www.monobrick.dk/software/c-library/">C++ Library</a></li>
</ul>
</li>
<li id="menu-item-497" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-497"><a href="http://www.monobrick.dk/robots/">Robots</a>
<ul class="sub-menu">
	<li id="menu-item-866" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-866"><a href="http://www.monobrick.dk/robots/aerial-ropeway/">Aerial Ropeway</a></li>
	<li id="menu-item-498" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-498"><a href="http://www.monobrick.dk/robots/image-scanner/">Image Scanner</a></li>
	<li id="menu-item-948" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-948"><a href="http://www.monobrick.dk/robots/plotter/">Plotter</a></li>
	<li id="menu-item-533" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-533"><a href="http://www.monobrick.dk/robots/rfid-rover/">RFID Rover</a></li>
	<li id="menu-item-499" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-499"><a href="http://www.monobrick.dk/robots/spy-bot/">Spy Bot</a></li>
	<li id="menu-item-1140" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1140"><a href="http://www.monobrick.dk/robots/brick-sorter/">Brick Sorter</a></li>
	<li id="menu-item-1141" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1141"><a href="http://www.monobrick.dk/robots/candy-machine/">Candy Machine</a></li>
	<li id="menu-item-1142" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1142"><a href="http://www.monobrick.dk/robots/cooler/">Cooler</a></li>
	<li id="menu-item-1143" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1143"><a href="http://www.monobrick.dk/robots/pinball-machine/">Pinball Machine</a></li>
	<li id="menu-item-1144" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1144"><a href="http://www.monobrick.dk/robots/scanner/">RCX Scanner</a></li>
</ul>
</li>
<li id="menu-item-540" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-540"><a href="http://www.monobrick.dk/sensors/">Sensors</a>
<ul class="sub-menu">
	<li id="menu-item-1067" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1067"><a href="http://www.monobrick.dk/sensors/magnetic-bit-reader/">Magnetic Bit Reader</a></li>
	<li id="menu-item-538" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-538"><a href="http://www.monobrick.dk/sensors/rfid-reader/">RFID Reader</a></li>
</ul>
</li>
<li id="menu-item-1351" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current_page_ancestor menu-item-has-children menu-item-1351"><a href="http://www.monobrick.dk/guides/">Guides</a>
<ul class="sub-menu">
	<li id="menu-item-4710" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-4710"><a href="http://www.monobrick.dk/guides/firmware-guides/">MonoBrick Firmware</a>
	<ul class="sub-menu">
		<li id="menu-item-3627" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3627"><a href="http://www.monobrick.dk/guides/firmware-guides/monobrickfirmwaresdcardwindows/">Creating A Bootable SD Card On Windows</a></li>
		<li id="menu-item-4664" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4664"><a href="http://www.monobrick.dk/guides/firmware-guides/monobrickfirmwaresdcardposix/">Creating A Bootable SD Card On Mac OS And Linux</a></li>
		<li id="menu-item-4692" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4692"><a href="http://www.monobrick.dk/guides/firmware-guides/installing-the-xamarin-studio-add-in-for-use-with-monobrick-firmware/">Xamarin Studio Add-in</a></li>
		<li id="menu-item-4660" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4660"><a href="http://www.monobrick.dk/guides/firmware-guides/setting-up-a-usb-connection-for-use-with-monobrick-firmware/">Setting Up a USB Connection</a></li>
		<li id="menu-item-4662" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4662"><a href="http://www.monobrick.dk/guides/firmware-guides/setting-up-a-wifi-connection-for-use-with-monobrick-firmware/">Setting Up a WiFi Connection</a></li>
	</ul>
</li>
	<li id="menu-item-4657" class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-4657"><a href="http://www.monobrick.dk/guides/communication-library-guides/">MonoBrick Communication Library</a>
	<ul class="sub-menu">
		<li id="menu-item-1500" class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1496 current_page_item menu-item-1500"><a href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/MonoBrick Communication Library Programming Guide   MonoBrick.DK.htm">MonoBrick Communication Library Programming Guide</a></li>
		<li id="menu-item-1352" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1352"><a href="http://www.monobrick.dk/guides/communication-library-guides/setting-up-monobrick-under-windows/">Using MonoBrick Communication Library On Windows</a></li>
		<li id="menu-item-1905" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1905"><a href="http://www.monobrick.dk/guides/communication-library-guides/setting-up-monobrick-on-mac-os/">Using MonoBrick Communication Library On Mac OS</a></li>
		<li id="menu-item-1379" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1379"><a href="http://www.monobrick.dk/guides/communication-library-guides/communicating-with-mindstorms-under-linux/">Using MonoBrick Communication Library On Linux</a></li>
	</ul>
</li>
	<li id="menu-item-2503" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2503"><a href="http://www.monobrick.dk/guides/how-to-establish-a-wifi-connection-with-the-ev3-brick/">How To Establish A WiFi Connection With The EV3</a></li>
</ul>
</li>
<li id="menu-item-3230" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-3230"><a href="http://www.monobrick.dk/forums/">Forums</a>
<ul class="sub-menu">
	<li id="menu-item-3231" class="menu-item menu-item-type-post_type menu-item-object-forum menu-item-3231"><a href="http://www.monobrick.dk/forums/user/monobrick-communication-library/">MonoBrick Communication Library</a></li>
	<li id="menu-item-3232" class="menu-item menu-item-type-post_type menu-item-object-forum menu-item-3232"><a href="http://www.monobrick.dk/forums/user/monobrick-ev3-firmware-2/">MonoBrick EV3 Firmware</a></li>
</ul>
</li>
<li id="menu-item-507" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-507"><a href="http://www.monobrick.dk/about/">About/Contact</a></li>
<li id="menu-item-4075" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4075"><a href="http://www.monobrick.dk/forums/">Forums</a></li>
</ul><a id="responsive_menu_button"></a></div>
		
		
	</div><!-- end of #header -->

	<div id="wrapper" class="clearfix">

<div id="content" class="grid col-620">

	
		
			
						<div id="post-1496" class="post-1496 page type-page status-publish hentry">
				
				
	<h1 class="entry-title post-title">MonoBrick Communication Library Programming Guide</h1>

	<div class="post-meta">
		<span class="meta-prep meta-prep-author posted">Posted on </span><a href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/MonoBrick Communication Library Programming Guide   MonoBrick.DK.htm" title="22:29" rel="bookmark"><span class="timestamp updated">January 29, 2013</span></a><span class="byline"> by </span><span class="author vcard"><a class="url fn n" href="http://www.monobrick.dk/author/admin/" title="View all posts by Anders Søborg">Anders Søborg</a></span>
					<span class="comments-link">
		<span class="mdash">—</span>
				<a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comments" title="Comment on MonoBrick Communication Library Programming Guide">37 Comments ↓</a>		</span>
			</div><!-- end of .post-meta -->

				<div class="post-entry">
					<p>This guide descries how to use the MonoBrick communication library with the EV3. Users of the NXT can also use this guide as inspiration as the syntax for the NXT is very similar. Be sure to check the <a href="http://www.monobrick.dk/MonoBrickDocumentation/annotated.html" title="MonoBrick Documentation" target="_blank">MonoBrick communication library documentation</a> for a complete list of all functionalities for both the EV3 and NXT. This guide contains the following sections. </p>
<ul>
<li><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#connection">Connecting to the brick</a></li>
<li><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#motors">Controlling motors</a></li>
<li><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#vehicle">Controlling a vehicle</a></li>
<li><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#sensors">Reading sensor values</a></li>
<li><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#filesystem">Using the filesystem</a></li>
<li><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#miscellaneous">Miscellaneous</a></li>
</ul>
<h3>Connecting to the Brick</h3>
<p><a name="connection"></a> The examples in this sections shows how to establish a connection to both the EV3 and NXT brick. Before proceeding please make sure that you are able to communicate with the brick. Mac Os and Linux uses will also have to make sure that Mono is installed. The set-up guides found <a href="http://www.monobrick.dk/guides/" title="Guides">here</a> will help you setup communication under Windows, Linux and Mac OS for use with the MonoBrick communication library.</p>
<h3>USB connection</h3>
<p>To create a USB connection make sure that you have copied the libusb and the hipapi files that came with the MonoBrick communication library download to the same folder as the exe file. If you are using the MonoBrick communication library test project you do not need to worry about this. The following code will open a usb connection and move motor A.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.On(50);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.Off();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">catch</span><span>(Exception&nbsp;e){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(e.StackTrace);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Error:&nbsp;"</span><span>&nbsp;+&nbsp;e.Message);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;end..."</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.ReadKey();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">finally</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;

public static class Program{
  static void Main(string[] args)
  {
    var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
    try{
        ev3.Connection.Open();
        ev3.MotorA.On(50);
        System.Threading.Thread.Sleep(3000);
        ev3.MotorA.Off();
    }
    catch(Exception e){
        Console.WriteLine(e.StackTrace);
        Console.WriteLine("Error: " + e.Message);
        Console.WriteLine("Press any key to end...");
        Console.ReadKey();				
    }
    finally{
        ev3.Connection.Close();
    }
  }
}</pre>
<h5>Bluetooth connection</h5>
<p>Before using a bluetooth connection make sure that you have paired your computer with the LEGO Brick. Use the MonoBrick communication library set-up <a href="http://www.monobrick.dk/guides/" title="Guides">guides</a> to help you with this. On windows the following code will connect to the brick using com6. </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"com6"</span><span>);&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("com6");
</pre>
<p>Replace this line with line 7 in the usb example to try it out. On Mac Os the bluetooth path might be called something like “/dev/tty.EV3-SerialPort” where EV3 is the name of the EV3 brick or /dev/tty.Great-DevB where Great is the name of the NXT Brick. The code below will create a brick object that connects to the EV3 brick called EV3. Replace this line with line 7 in the usb example to try it out.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"/dev/tty.EV3-SerialPort"</span><span>);&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var ev3 = Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("/dev/tty.EV3-SerialPort");
</pre>
<h5>WiFi connection</h5>
<p>WiFi connection only works with the EV3 and should not be confused with the tunnel connection which is described below. To use a WiFi connection you need to connect the EV3 to a WiFi network. This <a href="http://www.monobrick.dk/guide-for-establishing-a-wifi-connection-for-ev3-added/" title="Guide for establishing a WiFi connection for EV3 added">guide</a> shows you how to do this. Once the brick is connected to the network replace the following line with line 7 in the usb example. </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"wifi"</span><span>);&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("wifi");
</pre>
<h5>Tunnel connection</h5>
<p>A tunnel connection lets you communicate with your LEGO brick using either the <a href="http://www.monobrick.dk/software/bricktunnel/" title="MonoBrick Tunnel">MonoBrick Tunnel</a> or the <a href="http://www.monobrick.dk/software/android-tunnel/" title="MonoBrick Tunnel for Android">MonoBrick Tunnel for Android</a>. This allows you to communicate over both LAN and WAN. Currently the tunnels only supports the NXT but support for the EV3 will be added. Once you have the tunnel connected to the brick use the following code to create a connection to the tunnel listening for clients on a computer with IP-Address 192.168.1.11 on port 1500. </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.NXT;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;nxt&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;&nbsp;(</span><span class="string">"192.168.1.11"</span><span>,1500);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nxt.Connection.Open();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nxt.MotorA.On(50);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nxt.MotorA.Off();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">catch</span><span>(Exception&nbsp;e){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(e.StackTrace);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Error:&nbsp;"</span><span>&nbsp;+&nbsp;e.Message);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;end..."</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.ReadKey();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">finally</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nxt.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.NXT;

public static class Program{
  static void Main(string[] args)
	{
	  var nxt = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt; ("192.168.1.11",1500);
	  try{
		nxt.Connection.Open();
		nxt.MotorA.On(50);
		System.Threading.Thread.Sleep(3000);
		nxt.MotorA.Off();
	  }
	  catch(Exception e){
		Console.WriteLine(e.StackTrace);
		Console.WriteLine("Error: " + e.Message);
		Console.WriteLine("Press any key to end...");
		Console.ReadKey();				
  	  }
  	  finally{
		nxt.Connection.Close();
  	}
  }
}
</pre>
<p>If you want to have the tunnel connect to the client if for example the tunnel is running behind a firewall the following code will wait for the trunnel to establish a connection. Replace these two lines with line 6 in the tunnel example above  </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;connection&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;MonoBrick.TunnelConnection&lt;Command,Reply&gt;(1500);&nbsp;&nbsp;</span></span></li><li class=""><span>var&nbsp;nxt&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(connection);&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var connection = new MonoBrick.TunnelConnection&lt;Command,Reply&gt;(1500);
var nxt = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(connection);
</pre>
<p>To make the tunnel connect to the client please consult the <a href="http://www.monobrick.dk/software/bricktunnel/" title="MonoBrick Tunnel">MonoBrick Tunnel</a> page or the <a href="http://www.monobrick.dk/software/android-tunnel/" title="MonoBrick Tunnel for Android">MonoBrick Tunnel for Android</a> page.</p>
<p><a name="motors"></a></p>
<h3>Controlling motors</h3>
<p>Controlling motors with the MonoBrick communication library is easy. In this section the different motor movements are shown including motor synchronisation and vehicle control. The code below demonstrates how to make the motor move forwards, backwards, brake and stop. </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.MotorA.On(50);&nbsp;&nbsp;</span></li><li class=""><span>System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.MotorA.On(-50);&nbsp;&nbsp;</span></li><li class=""><span>System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.MotorA.Brake();<span class="comment">//motor&nbsp;is&nbsp;still&nbsp;on&nbsp;but&nbsp;does&nbsp;not&nbsp;move</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.MotorA.Off();&nbsp;&nbsp;</span></li><li class=""><span>ev3.Connection.Close();&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");  
ev3.Connection.Open();
ev3.MotorA.On(50);
System.Threading.Thread.Sleep(3000);
ev3.MotorA.On(-50);
System.Threading.Thread.Sleep(3000);
ev3.MotorA.Brake();//motor is still on but does not move
System.Threading.Thread.Sleep(3000);
ev3.MotorA.Off();
ev3.Connection.Close();
</pre>
<h5>Position control</h5>
<p>The following example demonstrates how to make the motor move to relative and absolute positions. When moving to a position please note that if you do not set the break flag the motor will coast when the position is reached and not stop immediately.  </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;&nbsp;ev3;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.ResetTacho();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.On(50,&nbsp;6*360,<span class="keyword">true</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForMotorToStop();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Position:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.MotorA.GetTachoCount());&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.On(-50,&nbsp;9*360,&nbsp;<span class="keyword">true</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForMotorToStop&nbsp;();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Position:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.MotorA.GetTachoCount());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.MoveTo(50,0,<span class="keyword">true</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WaitForMotorToStop();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.Off();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Position:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.MotorA.GetTachoCount());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">catch</span><span>(Exception&nbsp;e){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(e.StackTrace);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Error:&nbsp;"</span><span>&nbsp;+&nbsp;e.Message);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;end..."</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.ReadKey();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">finally</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;WaitForMotorToStop&nbsp;()&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread.Sleep(500);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(ev3.MotorA.IsRunning()){Thread.Sleep(50);}&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
	static Brick&lt;Sensor,Sensor,Sensor,Sensor&gt; ev3;  
	static void Main(string[] args)
	{
		ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
		try{
			ev3.Connection.Open();
			ev3.MotorA.ResetTacho();
			ev3.MotorA.On(50, 6*360,true);
			WaitForMotorToStop();
			Console.WriteLine("Position: " + ev3.MotorA.GetTachoCount());
			ev3.MotorA.On(-50, 9*360, true);
			WaitForMotorToStop ();
			Console.WriteLine("Position: " + ev3.MotorA.GetTachoCount());
			ev3.MotorA.MoveTo(50,0,true);
			WaitForMotorToStop();
			ev3.MotorA.Off();
			Console.WriteLine("Position: " + ev3.MotorA.GetTachoCount());
		}
		catch(Exception e){
			Console.WriteLine(e.StackTrace);
			Console.WriteLine("Error: " + e.Message);
			Console.WriteLine("Press any key to end...");
			Console.ReadKey();				
  		}
  		finally{
			ev3.Connection.Close();
  		}
  	}
  	
  	static void WaitForMotorToStop ()
	{
		Thread.Sleep(500);
		while(ev3.MotorA.IsRunning()){Thread.Sleep(50);}
	}
}
</pre>
<h5>Creating a motor ramp profile</h5>
<p>The step profile that is shown in the example makes the motor ramp up in 300 steps, run forward for 600 steps with speed 50, ramps down in 300 steps and brake when done. Profiles that are time based are also supported. See more in the <a href="http://www.monobrick.dk/MonoBrickDocumentation/annotated.html" title="MonoBrick Documentation" target="_blank">MonoBrick communication library documentation</a>     </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.MotorA.SpeedProfileStep(50,300,600,300,<span class="keyword">true</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Close();&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
ev3.Connection.Open();
ev3.MotorA.SpeedProfileStep(50,300,600,300,true);  
ev3.Connection.Close();
</pre>
<h5>Synchronising motors</h5>
<p>The example below shows how to synchronise Motor A and Motor D. If you need to synchronise motors to control a vehicle please see the <a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#vehicle">vehicle section</a> below.   </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.MotorSync.BitField&nbsp;=&nbsp;OutputBitfield.OutA&nbsp;|&nbsp;OutputBitfield.OutD;&nbsp;&nbsp;</span></li><li class=""><span>ev3.MotorSync.On(50,&nbsp;0);&nbsp;&nbsp;</span></li><li class="alt"><span>System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class=""><span>ev3.MotorSync.On(50,&nbsp;50);<span class="comment">//Motor&nbsp;A&nbsp;runs&nbsp;twice&nbsp;as&nbsp;fast&nbsp;as&nbsp;motor&nbsp;D&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>System.Threading.Thread.Sleep(3000);&nbsp;&nbsp;</span></li><li class=""><span>ev3.MotorSync.Brake();&nbsp;&nbsp;</span></li><li class="alt"><span>System.Threading.Thread.Sleep(1000);&nbsp;&nbsp;</span></li><li class=""><span>ev3.MotorSync.StepSync(-50,0,6*360,<span class="keyword">false</span><span>);</span><span class="comment">//Move&nbsp;to&nbsp;a&nbsp;position</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>ev3.Connection.Close();&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
ev3.Connection.Open();
ev3.MotorSync.BitField = OutputBitfield.OutA | OutputBitfield.OutD;
ev3.MotorSync.On(50, 0);
System.Threading.Thread.Sleep(3000);
ev3.MotorSync.On(50, 50);//Motor A runs twice as fast as motor D 
System.Threading.Thread.Sleep(3000);
ev3.MotorSync.Brake();
System.Threading.Thread.Sleep(1000);
ev3.MotorSync.StepSync(-50,0,6*360,false);//Move to a position
ev3.Connection.Close();
</pre>
<p><a name="vehicle"></a></p>
<h3>Controlling a vehicle</h3>
<p>This section shows you how to control a vehicle. The example below let’s you control a vehicle using the keyboard. When using this example on your own robot please make sure to change the direction of the motors to fit your needs.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.LeftPort&nbsp;=&nbsp;MotorPort.OutA;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.RightPort&nbsp;=&nbsp;MotorPort.OutD;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.ReverseLeft&nbsp;=&nbsp;<span class="keyword">false</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.ReverseRight&nbsp;=&nbsp;<span class="keyword">false</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">sbyte</span><span>&nbsp;speed&nbsp;=&nbsp;50;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConsoleKeyInfo&nbsp;cki;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;T&nbsp;to&nbsp;quit"</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cki&nbsp;=&nbsp;Console.ReadKey(<span class="keyword">true</span><span>);&nbsp;</span><span class="comment">//press&nbsp;a&nbsp;key&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(cki.Key){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.W:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.Forward(speed);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.S:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.Backward(speed);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.SpinRight(speed);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.A:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.SpinLeft(speed);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.Q:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.TurnLeftForward(speed,&nbsp;50);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.E:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.TurnRightForward(speed,50);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.C:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.TurnRightReverse(speed,50);&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.Z:&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.TurnLeftReverse(speed,&nbsp;50);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.Spacebar:&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Vehicle.Off();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">while</span><span>&nbsp;(cki.Key&nbsp;!=&nbsp;ConsoleKey.T);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">catch</span><span>(Exception&nbsp;e){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(e.StackTrace);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Error:&nbsp;"</span><span>&nbsp;+&nbsp;e.Message);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;end..."</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.ReadKey();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">finally</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
	static void Main(string[] args)
	{
		var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
		try{
			ev3.Connection.Open();
			ev3.Vehicle.LeftPort = MotorPort.OutA;
			ev3.Vehicle.RightPort = MotorPort.OutD;
			ev3.Vehicle.ReverseLeft = false;
			ev3.Vehicle.ReverseRight = false;
			sbyte speed = 50;
			ConsoleKeyInfo cki;  
		    Console.WriteLine("Press T to quit");  
		    do   
		    {  
		        cki = Console.ReadKey(true); //press a key  
		        switch(cki.Key){    
		            case ConsoleKey.W:    
		                ev3.Vehicle.Forward(speed);
		            	break;                              
		            case ConsoleKey.S:     
		                ev3.Vehicle.Backward(speed);   
		            	break;    
		            case ConsoleKey.D:     
		                ev3.Vehicle.SpinRight(speed);    
		            	break;    
		            case ConsoleKey.A:     
		                ev3.Vehicle.SpinLeft(speed);    
		            	break;    
		            case ConsoleKey.Q:    
		                ev3.Vehicle.TurnLeftForward(speed, 50);    
		            	break;  
		            case ConsoleKey.E:    
		             	ev3.Vehicle.TurnRightForward(speed,50);       
		            break;  
		            case ConsoleKey.C:    
		                ev3.Vehicle.TurnRightReverse(speed,50);  
		            break;  
		            case ConsoleKey.Z:  
		                ev3.Vehicle.TurnLeftReverse(speed, 50);
		            break; 
		            case ConsoleKey.Spacebar:  
		                ev3.Vehicle.Off();
		            break; 
		        }  
		    } while (cki.Key != ConsoleKey.T);
		}
		catch(Exception e){
			Console.WriteLine(e.StackTrace);
			Console.WriteLine("Error: " + e.Message);
			Console.WriteLine("Press any key to end...");
			Console.ReadKey();				
  		}
  		finally{
			ev3.Connection.Close();
  		}
  	}
}
</pre>
<p>It is also possible to make the vehicle move a given number of steps as shown below. </p>
<div class="dp-highlighter"><ol start="1" class="dp-c"><li class="alt"><span><span>ev3.Vehicle.Forward(50,12*360);&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">
ev3.Vehicle.Forward(50,12*360);
</pre>
<p><a name="sensors"></a></p>
<h3>Reading sensors</h3>
<p>The MonoBrick communication library supports the LEGO sensors that comes with both the EV3 retail and educational sets including the IR-Sensor, Color Sensor, Gyro Sensor and Temperature Sensor. In addition the LEGO sensors from the NXT 1.0 and 2.0 retail sets are also supported including the Light Sensor, Sound Sensor and Ultrasonic sensor. For the NXT a number of Hitechnic are also supported but these are not yet supported on the EV3. This guide only shows how to read sensor values using the EV3. For more information on all supported sensors for the EV3 and how to read sensor values with the NXT please consult the <a href="http://www.monobrick.dk/MonoBrickDocumentation/annotated.html" title="MonoBrick Documentation" target="_blank">MonoBrick communication library documentation</a>.</p>
<p>All sensors inherits from the sensor base class. The example below uses the base class to print out sensor values</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor1&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;IRSensor(IRMode.Proximity);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor2&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;TouchSensor();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ColorSensor(ColorMode.Color);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor4&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;GyroSensor(GyroMode.Angle);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConsoleKeyInfo&nbsp;cki;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;Q&nbsp;to&nbsp;quit"</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cki&nbsp;=&nbsp;Console.ReadKey(<span class="keyword">true</span><span>);&nbsp;</span><span class="comment">//press&nbsp;a&nbsp;key&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(cki.Key){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D1:</span><span class="comment">//1&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"S1:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.Sensor1.ReadAsString());&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D2:</span><span class="comment">//2&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"S2:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.Sensor2.ReadAsString());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D3:</span><span class="comment">//3&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"S3:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.Sensor3.ReadAsString());&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D4:</span><span class="comment">//4&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"S4:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.Sensor4.ReadAsString());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">while</span><span>&nbsp;(cki.Key&nbsp;!=&nbsp;ConsoleKey.Q);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
	static void Main(string[] args)
	{
		var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
		ev3.Connection.Open();
		ev3.Sensor1 = new IRSensor(IRMode.Proximity);
		ev3.Sensor2 = new TouchSensor();
		ev3.Sensor3 = new ColorSensor(ColorMode.Color);
		ev3.Sensor4 = new GyroSensor(GyroMode.Angle);
		ConsoleKeyInfo cki;  
		Console.WriteLine("Press Q to quit");  
		do   
		{  
	        cki = Console.ReadKey(true); //press a key  
	        switch(cki.Key){    
	            case ConsoleKey.D1://1 is pressed    
	                Console.WriteLine("S1: " + ev3.Sensor1.ReadAsString());
	            	break;                              
	            case ConsoleKey.D2://2 is pressed    
	                Console.WriteLine("S2: " + ev3.Sensor2.ReadAsString());
	            	break;                              
	            case ConsoleKey.D3://3 is pressed    
	                Console.WriteLine("S3: " + ev3.Sensor3.ReadAsString());
	            	break;                              
	            case ConsoleKey.D4://4 is pressed    
	                Console.WriteLine("S4: " + ev3.Sensor4.ReadAsString());
	            	break;                              
	        }  
		} while (cki.Key != ConsoleKey.Q);
		ev3.Connection.Close();
  		
  	}
}
</pre>
<h5>Using generics to set the sensor type</h5>
<p>Using generics you can access sensor specific functions as shown in the example below. Here the touch sensor counts bumps and can be cleared by pressing R. The color value is evaluated to determine if the color is in fact green and finally the IR-Sensor is used in seek mode to locate the remote. IR seek mode only works on channel 0.  </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;TouchSensor,ColorSensor,IRSensor,Sensor&gt;&nbsp;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor1.Mode&nbsp;=&nbsp;TouchMode.Count;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor2.Mode&nbsp;=&nbsp;ColorMode.Color;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor3.Mode&nbsp;=&nbsp;IRMode.Seek;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConsoleKeyInfo&nbsp;cki;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;Q&nbsp;to&nbsp;quit"</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cki&nbsp;=&nbsp;Console.ReadKey(<span class="keyword">true</span><span>);&nbsp;</span><span class="comment">//press&nbsp;a&nbsp;key&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(cki.Key){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.R:</span><span class="comment">//C&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor1.Reset();<span class="comment">//reset&nbsp;the&nbsp;count</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Reset&nbsp;touch&nbsp;count"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D1:</span><span class="comment">//1&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"S1:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.Sensor1.ReadAsString());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D2:</span><span class="comment">//2&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Color&nbsp;color&nbsp;=&nbsp;ev3.Sensor2.ReadColor();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(color&nbsp;==&nbsp;Color.Green){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Color&nbsp;is&nbsp;green"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Beep(50,100);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Color&nbsp;is&nbsp;"</span><span>&nbsp;+&nbsp;color&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"&nbsp;and&nbsp;this&nbsp;is&nbsp;not&nbsp;green"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D3:</span><span class="comment">//3&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">int</span><span>&nbsp;value&nbsp;&nbsp;=&nbsp;ev3.Sensor3.Read();&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(value&nbsp;==&nbsp;0){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Beep(50,100);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Found&nbsp;target"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(value&nbsp;&lt;&nbsp;0){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Target&nbsp;is&nbsp;to&nbsp;the&nbsp;left"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">else</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Target&nbsp;is&nbsp;to&nbsp;the&nbsp;right"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">while</span><span>&nbsp;(cki.Key&nbsp;!=&nbsp;ConsoleKey.Q);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
	static void Main(string[] args)
	{
		var ev3 = new Brick&lt;TouchSensor,ColorSensor,IRSensor,Sensor&gt; ("usb");
		ev3.Connection.Open();
		ev3.Sensor1.Mode = TouchMode.Count;
		ev3.Sensor2.Mode = ColorMode.Color;
		ev3.Sensor3.Mode = IRMode.Seek;
		ConsoleKeyInfo cki;  
		Console.WriteLine("Press Q to quit");  
		do   
		{  
	        cki = Console.ReadKey(true); //press a key  
	        switch(cki.Key){    
	            case ConsoleKey.R://C is pressed    
	                ev3.Sensor1.Reset();//reset the count
	                Console.WriteLine("Reset touch count");
	            	break;                              
	            case ConsoleKey.D1://1 is pressed    
	                Console.WriteLine("S1: " + ev3.Sensor1.ReadAsString());
	            	break;                              
	            case ConsoleKey.D2://2 is pressed    
	                Color color = ev3.Sensor2.ReadColor();
	                if(color == Color.Green){
	                	Console.WriteLine("Color is green");
	                	ev3.Beep(50,100);
	                }
	                else{
	                	Console.WriteLine("Color is " + color +  
	                	" and this is not green");
	                }
	                break;                              
	            case ConsoleKey.D3://3 is pressed    
	                int value  = ev3.Sensor3.Read();
	                if(value == 0){
	                	ev3.Beep(50,100);
	                	Console.WriteLine("Found target");
	                }
	                else{
	                	if(value &lt; 0){
	                		Console.WriteLine("Target is to the left");
	                	}
	                	else{
	                		Console.WriteLine("Target is to the right");
	                	}
	                }
	            	break;                              
	        }  
		} while (cki.Key != ConsoleKey.Q);
		ev3.Connection.Close();
  	}
}</pre>
<h5>Auto detecting sensor type</h5>
<p>The following example shows how to auto detect the sensor type and assign the sensor to the correct type. This makes it possible to print the value in the correct format.   </p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sensor&nbsp;newSensor&nbsp;=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">string</span><span>&nbsp;key&nbsp;=&nbsp;SensorHelper.TypeToKey(ev3.Sensor1.GetSensorType());&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(SensorHelper.SensorDictionary.TryGetValue(key,&nbsp;</span><span class="keyword">out</span><span>&nbsp;newSensor)){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor1&nbsp;=&nbsp;newSensor;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConsoleKeyInfo&nbsp;cki;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;Q&nbsp;to&nbsp;quit"</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cki&nbsp;=&nbsp;Console.ReadKey(<span class="keyword">true</span><span>);&nbsp;</span><span class="comment">//press&nbsp;a&nbsp;key&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(cki.Key){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.D1:</span><span class="comment">//1&nbsp;is&nbsp;pressed&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"S1:&nbsp;"</span><span>&nbsp;+&nbsp;ev3.Sensor1.ReadAsString());&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">while</span><span>&nbsp;(cki.Key&nbsp;!=&nbsp;ConsoleKey.Q);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
	static void Main(string[] args)
	{
		var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
		ev3.Connection.Open();
		Sensor newSensor = null;
		string key = SensorHelper.TypeToKey(ev3.Sensor1.GetSensorType());
		if(SensorHelper.SensorDictionary.TryGetValue(key, out newSensor)){
			ev3.Sensor1 = newSensor;
		}
		ConsoleKeyInfo cki;  
		Console.WriteLine("Press Q to quit");  
		do   
		{  
	        cki = Console.ReadKey(true); //press a key  
	        switch(cki.Key){    
	            case ConsoleKey.D1://1 is pressed    
	                Console.WriteLine("S1: " + ev3.Sensor1.ReadAsString());
	            	break;                              
	        }  
		} while (cki.Key != ConsoleKey.Q);
		ev3.Connection.Close();
  		
  	}
}</pre>
<p><a name="filesystem"></a> </p>
<h3>Using the filesystem</h3>
<p> With the filesystem it is possible to start and stop programs, get a list of files and playback sound files. Below some sample code for listing subfolders and files in the project folder is shown.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BrickFile[]&nbsp;files;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">string</span><span>[]&nbsp;subfolders;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.FileSystem.GetFolderInfo(<span class="string">"/home/root/lms2012/prjs/"</span><span>,&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">out</span><span>&nbsp;files,&nbsp;</span><span class="keyword">out</span><span>&nbsp;subfolders);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Files:"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">foreach</span><span>(var&nbsp;file&nbsp;</span><span class="keyword">in</span><span>&nbsp;files){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(file.Name);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(Environment.NewLine&nbsp;+&nbsp;<span class="string">"Subfolders:"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">foreach</span><span>(var&nbsp;folder&nbsp;</span><span class="keyword">in</span><span>&nbsp;subfolders){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(folder);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c-sharp" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
	static void Main(string[] args)
	{
		var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&gt;("usb");
		ev3.Connection.Open();
		BrickFile[] files;
		string[] subfolders;
		ev3.FileSystem.GetFolderInfo("/home/root/lms2012/prjs/", 
									out files, out subfolders);
		Console.WriteLine("Files:");
		foreach(var file in files){
			Console.WriteLine(file.Name);
		}
		Console.WriteLine(Environment.NewLine + "Subfolders:");
		foreach(var folder in subfolders){
			Console.WriteLine(folder);
		}
		ev3.Connection.Close();
  	}
}</pre>
<h5>Create a directory and write a file to the EV3</h5>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.FileSystem.CreateDirectory(<span class="string">"/home/root/lms2012/prjs/MyPrograms"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.FileSystem.WriteFile(@<span class="string">"C:\program.rbf"</span><span>,&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">"/home/root/lms2012/prjs/MyPrograms/program.rbf"</span><span>);&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Close();&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c#" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;("usb");
ev3.Connection.Open();
ev3.FileSystem.CreateDirectory("/home/root/lms2012/prjs/MyPrograms");
ev3.FileSystem.WriteFile(@"C:\program.rbf",
                         "/home/root/lms2012/prjs/MyPrograms/program.rbf"); 
ev3.Connection.Close();</pre>
<h5>Recursively listing program files found in /home or its subfolders</h5>
<p>This example require linq to be included in the project. In Visual Studio this is default while Mono Users will have to add a reference to System.Core</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>var&nbsp;folderStructure&nbsp;=&nbsp;ev3.FileSystem.GetFolderStructure(<span class="string">"/home"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>var&nbsp;fileQuery&nbsp;=&nbsp;from&nbsp;structure&nbsp;<span class="keyword">in</span><span>&nbsp;folderStructure.RunThroughFolders()&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;files&nbsp;<span class="keyword">in</span><span>&nbsp;structure.FileList&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;files.FileType&nbsp;==&nbsp;MonoBrick.FileType.Program&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select&nbsp;files;&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">foreach</span><span>(var&nbsp;file&nbsp;</span><span class="keyword">in</span><span>&nbsp;fileQuery)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(file.Name&nbsp;+&nbsp;<span class="string">"&nbsp;in&nbsp;"</span><span>&nbsp;+&nbsp;file.Path);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Close();&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c#" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;("usb");
ev3.Connection.Open();
var folderStructure = ev3.FileSystem.GetFolderStructure("/home");
var fileQuery = from structure in folderStructure.RunThroughFolders()
                from files in structure.FileList
                where files.FileType == MonoBrick.FileType.Program
                select files;
foreach(var file in fileQuery)
    Console.WriteLine(file.Name + " in " + file.Path);
ev3.Connection.Close();</pre>
<h5>Starting and stopping the first program found in /home or its subfolders</h5>
<p>This example require linq to be included in the project. In Visual Studio this is default while Mono Users will have to add a reference to System.Core</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span>var&nbsp;ev3&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>var&nbsp;folderStructure&nbsp;=&nbsp;ev3.FileSystem.GetFolderStructure(<span class="string">"/home"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>var&nbsp;fileQuery&nbsp;=&nbsp;from&nbsp;structure&nbsp;<span class="keyword">in</span><span>&nbsp;folderStructure.RunThroughFolders()&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;files&nbsp;<span class="keyword">in</span><span>&nbsp;structure.FileList&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;files.FileType&nbsp;==&nbsp;MonoBrick.FileType.Program&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select&nbsp;files;&nbsp;&nbsp;</span></li><li class=""><span>ev3.StartProgram(fileQuery.First());&nbsp;&nbsp;</span></li><li class="alt"><span>System.Threading.Thread.Sleep(5000);&nbsp;&nbsp;</span></li><li class=""><span>ev3.StopProgram();&nbsp;&nbsp;</span></li><li class="alt"><span>ev3.Connection.Close();&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c#" style="display: none;">var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;("usb");
ev3.Connection.Open();
var folderStructure = ev3.FileSystem.GetFolderStructure("/home");
var fileQuery = from structure in folderStructure.RunThroughFolders()
                from files in structure.FileList
                where files.FileType == MonoBrick.FileType.Program
                select files;
ev3.StartProgram(fileQuery.First());
System.Threading.Thread.Sleep(5000);
ev3.StopProgram();
ev3.Connection.Close();</pre>
<h3>Miscellaneous</h3>
<p><a name="miscellaneous"></a></p>
<h5>Sending data to the mailbox</h5>
<p>To make the EV3 receive data from the mailbox a program must be running on the brick that listens for data from the mailbox. Use the download link to get a hold of the EV3 program shown below. The program simply takes the input string from the mailbox named "mailbox1" and prints it on the LCD.<br>
<a href="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/ev3mailbox.png" class="fancybox"><img src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/ev3mailbox.png" alt="ev3mailbox" width="621" height="230" class="alignleft size-full wp-image-2688"></a><br>
To send text to the EV3 the following code can be used.</p>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ConsoleKeyInfo&nbsp;cki;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"Press&nbsp;Q&nbsp;to&nbsp;quit"</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">do</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cki&nbsp;=&nbsp;Console.ReadKey(<span class="keyword">true</span><span>);&nbsp;</span><span class="comment">//press&nbsp;a&nbsp;key&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">switch</span><span>(cki.Key){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">case</span><span>&nbsp;ConsoleKey.M:&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(<span class="string">"String&nbsp;to&nbsp;send&nbsp;to&nbsp;mailbox"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">string</span><span>&nbsp;input&nbsp;=&nbsp;Console.ReadLine();&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Mailbox.Send(<span class="string">"mailbox1"</span><span>,&nbsp;input,&nbsp;</span><span class="keyword">false</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">break</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">while</span><span>&nbsp;(cki.Key&nbsp;!=&nbsp;ConsoleKey.Q);&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c#" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
  static void Main(string[] args)
  {
      var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;("usb");
      ev3.Connection.Open();
      ConsoleKeyInfo cki;
      Console.WriteLine("Press Q to quit");    
      do     
      {    
          cki = Console.ReadKey(true); //press a key    
          switch(cki.Key){
            case ConsoleKey.M:
                Console.WriteLine("String to send to mailbox");
                string input = Console.ReadLine();
                ev3.Mailbox.Send("mailbox1", input, false);
                break;                                 
          }    
      } while (cki.Key != ConsoleKey.Q);  
      ev3.Connection.Close();
  }
}
</pre>
<h5>Controlling bricks connected in a daisychain</h5>
<div class="dp-highlighter"><div class="bar"><div class="tools"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy to clipboard</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a></div></div><ol start="1" class="dp-c"><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">using</span><span>&nbsp;MonoBrick.EV3;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">using</span><span>&nbsp;System.Threading;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;Program{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;<span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;Main(</span><span class="keyword">string</span><span>[]&nbsp;args)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ev3&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;(</span><span class="string">"usb"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Open();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.DaisyChainLayer&nbsp;=&nbsp;DaisyChainLayer.First;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.On(50);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread.Sleep(2000);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.MotorA.Off();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Sensor1.DaisyChainLayer&nbsp;=&nbsp;DaisyChainLayer.Second;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(ev3.Sensor1.ReadAsString());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev3.Connection.Close();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="c#" style="display: none;">using System;
using MonoBrick.EV3;
using System.Threading;
public static class Program{
  static void Main(string[] args)
  {
      var ev3 = new Brick&lt;Sensor,Sensor,Sensor,Sensor&lt;("usb");
      ev3.Connection.Open();
      ev3.MotorA.DaisyChainLayer = DaisyChainLayer.First;
      ev3.MotorA.On(50);
      Thread.Sleep(2000);
      ev3.MotorA.Off();
      ev3.Sensor1.DaisyChainLayer = DaisyChainLayer.Second;
      Console.WriteLine(ev3.Sensor1.ReadAsString());
      ev3.Connection.Close();
  }
}
</pre>
<div class="social4i" style="height:29px;">
<div class="social4in" style="height:29px;float: left;">
<div class="socialicons s4fblike" style="float:left;margin-right: 10px;">
<div class="fb-like fb_iframe_widget" data-href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/" data-send="false" data-layout="button_count" data-width="100" data-height="21" data-show-faces="false" fb-xfbml-state="rendered" fb-iframe-plugin-query="app_id=&amp;height=21&amp;href=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;send=false&amp;show_faces=false&amp;width=100"><span style="vertical-align: bottom; width: 76px; height: 20px;"><iframe name="f1f29774b4" width="100px" height="21px" frameborder="0" allowtransparency="true" scrolling="no" title="fb:like Facebook Social Plugin" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/like.htm" style="border: none; visibility: visible; width: 76px; height: 20px;" class=""></iframe></span></div>
</div>
<div class="socialicons s4linkedin" style="float:left;margin-right: 10px;"><span class="IN-widget" style="line-height: 1; vertical-align: baseline; display: inline-block; text-align: center;"><span style="padding: 0px !important; margin: 0px !important; text-indent: 0px !important; display: inline-block !important; vertical-align: baseline !important; font-size: 1px !important;"><span id="li_ui_li_gen_1410754772793_0"><a id="li_ui_li_gen_1410754772793_0-link" href="javascript:void(0);"><span id="li_ui_li_gen_1410754772793_0-logo">in</span><span id="li_ui_li_gen_1410754772793_0-title"><span id="li_ui_li_gen_1410754772793_0-mark"></span><span id="li_ui_li_gen_1410754772793_0-title-text">Share</span></span></a></span></span><span style="padding: 0px !important; margin: 0px !important; text-indent: 0px !important; display: inline-block !important; vertical-align: baseline !important; font-size: 1px !important;"><span id="li_ui_li_gen_1410754772803_1-container" class="IN-right IN-hidden"><span id="li_ui_li_gen_1410754772803_1" class="IN-right"><span id="li_ui_li_gen_1410754772803_1-inner" class="IN-right"><span id="li_ui_li_gen_1410754772803_1-content" class="IN-right">0</span></span></span></span></span></span><script type="in/share+init" data-url="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/" data-counter="right"></script></div>
<div class="socialicons s4twitter" style="float:left;margin-right: 10px;"><iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/tweet_button.1410542722.htm" class="twitter-share-button twitter-tweet-button twitter-share-button twitter-count-horizontal" title="Twitter Tweet Button" data-twttr-rendered="true" style="width: 107px; height: 20px;"></iframe></div>
<div class="socialicons s4plusone" style="float:left;margin-right: 10px;">
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px; background: transparent;"><iframe frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" tabindex="0" vspace="0" width="100%" id="I0_1410754771855" name="I0_1410754771855" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/fastbutton.htm" data-gapiattached="true" title="+1"></iframe></div>
</div>
</div>
<div style="clear:both"></div>
</div>
									</div>
				<!-- end of .post-entry -->

				

<div class="post-edit"></div>
							</div><!-- end of #post-1496 -->
			
						
	<h6 id="comments">
		37 comments on “<span>MonoBrick Communication Library Programming Guide</span>”	</h6>

	
	<ol class="commentlist">
				<li class="comment byuser comment-author-facebook_bruno-hautzenberger even thread-even depth-1 parent" id="comment-5175">
				<div id="div-comment-5175" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/picture" class="avatar avatar-60 photo " height="60" width="60">			<cite class="fn"><a href="https://facebook.com/profile.php?id=1470883407" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;&#39;]);" rel="external nofollow" class="url">Bruno Hautzenberger</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5175">
			September 25, 2013 at 18:40</a>		</div>

		<p>Thank you so much. I will test this right now!</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5175#respond" onclick="return addComment.moveForm(&quot;div-comment-5175&quot;, &quot;5175&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-facebook_jens-reinecke87 odd alt depth-2 parent" id="comment-5188">
				<div id="div-comment-5188" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/picture(1)" class="avatar avatar-60 photo " height="60" width="60">			<cite class="fn"><a href="https://facebook.com/profile.php?id=1096633679" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;&#39;]);" rel="external nofollow" class="url">Jens Reinecke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5188">
			September 27, 2013 at 19:44</a>		</div>

		<p>Wow, that is perfect. Thanks a lot!! sensor program works. I’ll go for more stuff now <img src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5188#respond" onclick="return addComment.moveForm(&quot;div-comment-5188&quot;, &quot;5188&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-3" id="comment-5189">
				<div id="div-comment-5189" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5189">
			September 27, 2013 at 19:50</a>		</div>

		<p>Great to hear that everything is working perfect!</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5189#respond" onclick="return addComment.moveForm(&quot;div-comment-5189&quot;, &quot;5189&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-5285">
				<div id="div-comment-5285" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Volker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5285">
			October 6, 2013 at 07:01</a>		</div>

		<p>Hi Anders, i tried the Monobrick Test Project with EV3 Firmware V1.03H and Visual Studio. EV3 is connected by USB. When the  HidApiNative.hid_open() is called, the Programm jumps to ConnectionException. Any Ideas where my Problem is ? If I use the Original Lego Software the Connection to the EV3 is no Problem.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5285#respond" onclick="return addComment.moveForm(&quot;div-comment-5285&quot;, &quot;5285&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2 parent" id="comment-5286">
				<div id="div-comment-5286" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5286">
			October 6, 2013 at 07:42</a>		</div>

		<p>Hi </p>
<p>Thanks for trying out MonoBrick. I am guessing that you are on Windows! The hidapi.dll that comes with the test project needs to be in the same folder as the exe file that is compiled. The test project should copy this file to the output folder but maybe this is not the case. The outpur folder is normally c:\yourprojectfolder\bin\Debug or c:\yourprijectfolder\bin\Release depending on your configuration. Check that this folder contains the dll. Are you using Visual Studio?</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5286#respond" onclick="return addComment.moveForm(&quot;div-comment-5286&quot;, &quot;5286&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3 parent" id="comment-5293">
				<div id="div-comment-5293" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Volker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5293">
			October 7, 2013 at 18:26</a>		</div>

		<p>Hi,<br>
Yes I use Windows and Visual Studio. The Debug Folder contains the Dll. Still it does not work with USB Connection when it Comes to line<br>
device = HidApiNative.hid_open(this.vendorId, this.productId, IntPtr.Zero);<br>
The Programm jumps to ConnectionException (VendorID = 1684, productID = 5, Zero = 0) . Any Idea ?<br>
I tried Wifi Connection and then it works great. Really great Job what you did. Would be great if we couled solve the Problem with USB Connection. Another thing how can I print something on the Display, could not find the command ?  Thanks a lot for your effort.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5293#respond" onclick="return addComment.moveForm(&quot;div-comment-5293&quot;, &quot;5293&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-4 parent" id="comment-5294">
				<div id="div-comment-5294" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Volker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5294">
			October 7, 2013 at 21:28</a>		</div>

		<p>I assume to print something on the Display I need to use the Mailbox example shown on this page.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5294#respond" onclick="return addComment.moveForm(&quot;div-comment-5294&quot;, &quot;5294&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor odd alt depth-5" id="comment-5304">
				<div id="div-comment-5304" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5304">
			October 8, 2013 at 14:48</a>		</div>

		<p>I don’t have the program but as shown on the picture you simply take the mailbox message and print it on the screen…</p>

		<div class="reply">
					</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-admin bypostauthor even depth-4" id="comment-5303">
				<div id="div-comment-5303" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5303">
			October 8, 2013 at 14:46</a>		</div>

		<p>Hi Again </p>
<p>I just did some testing on my Windows machine and it seems that the problem with loading the dll is related to Visual Studio. From Xamarin Studio the test program runs fine. I will have a look at it tonight. In the meantime try to use Xamarin Studio.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5303#respond" onclick="return addComment.moveForm(&quot;div-comment-5303&quot;, &quot;5303&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-admin bypostauthor odd alt depth-4 parent" id="comment-5355">
				<div id="div-comment-5355" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5355">
			October 10, 2013 at 07:37</a>		</div>

		<p>I fixed the problem with the USB and Visual studio. In the usb.cs file find all the places where the hipapi dll is imported<br>
[DllImport("hidapi)]<br>
and replace this with<br>
[DllImport("hidapi", CallingConvention = CallingConvention.Cdecl)]</p>
<p>I will upload a new version of MonoBrick with the fix later tonight. </p>
<p>Could you please confirm that this fixes the problem.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5355#respond" onclick="return addComment.moveForm(&quot;div-comment-5355&quot;, &quot;5355&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-5 parent" id="comment-5375">
				<div id="div-comment-5375" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Volker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5375">
			October 10, 2013 at 18:51</a>		</div>

		<p>I changed the DllIport(“hidapi”) six times in the usb.cs file by [DllImport("hidapi", CallingConvention = CallingConvention.Cdecl)] . But still got the same Problem ? Did it work at your tests, do you have any more ideas ?</p>

		<div class="reply">
					</div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-admin bypostauthor odd alt depth-5" id="comment-5376">
				<div id="div-comment-5376" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5376">
			October 10, 2013 at 18:58</a>		</div>

		<p>Did your rebuilt the solution? Are you getting the same error as before?</p>
<p>Anders</p>

		<div class="reply">
					</div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-admin bypostauthor even depth-5" id="comment-5377">
				<div id="div-comment-5377" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5377">
			October 10, 2013 at 19:06</a>		</div>

		<p>What is the error that you are getting?</p>

		<div class="reply">
					</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-5397">
				<div id="div-comment-5397" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Max</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5397">
			October 11, 2013 at 05:50</a>		</div>

		<p>For those getting the ‘incorrect format’ problem with the test solution in Visual Studio…<br>
Right click the Project in the project Explorer window and select Properties.<br>
IN the Properties window, select the Build tab<br>
Change the Platform Target to x86</p>
<p>Sorted!</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5397#respond" onclick="return addComment.moveForm(&quot;div-comment-5397&quot;, &quot;5397&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2 parent" id="comment-5399">
				<div id="div-comment-5399" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5399">
			October 11, 2013 at 07:31</a>		</div>

		<p>Thanks for pointing this out. I will upload a new test project tonight.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5399#respond" onclick="return addComment.moveForm(&quot;div-comment-5399&quot;, &quot;5399&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3 parent" id="comment-5417">
				<div id="div-comment-5417" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Volker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5417">
			October 11, 2013 at 19:12</a>		</div>

		<p>Yes I still got exactly the same Problem ? Sorry but I have no Idea what to do. It works fine if I use Wifi.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5417#respond" onclick="return addComment.moveForm(&quot;div-comment-5417&quot;, &quot;5417&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-4 parent" id="comment-5423">
				<div id="div-comment-5423" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5423">
			October 11, 2013 at 19:53</a>		</div>

		<p>Ok but what is you problem – could you please write the exception that you are getting. I just uploaded a new test project. I have tested this on two different machines at work. One that runs Visual Studio 2010 and another that runs Visual Studio 2012. Works like a charm on both…</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5423#respond" onclick="return addComment.moveForm(&quot;div-comment-5423&quot;, &quot;5423&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-5 parent" id="comment-5758">
				<div id="div-comment-5758" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Volker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5758">
			October 20, 2013 at 20:27</a>		</div>

		<p>I use Visual Studio Express 2012. I tried on 2 Computers and always get “Error: Failed to open Connection”. I also get exactly the same error if I unplug the EV3 ? Looks like the program cannot find the EV3? Do I maybe have to specify somewhere a Com-Port or anything ? Any other sugestions how I could find out where the Problem is ?</p>

		<div class="reply">
					</div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-admin bypostauthor even depth-5" id="comment-5759">
				<div id="div-comment-5759" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5759">
			October 20, 2013 at 20:30</a>		</div>

		<p>Find out what exception you are getting. Go to the usb.cs file and find out what exception is thrown (and caught) when connection fails.</p>
<p>Anders</p>

		<div class="reply">
					</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-twitter_jpencausse odd alt thread-odd thread-alt depth-1 parent" id="comment-5779">
				<div id="div-comment-5779" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/twitterProfilePhoto_normal.jpg" class="avatar avatar-60 photo " height="60" width="60">			<cite class="fn"><a href="https://twitter.com/JpEncausse" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;&#39;]);" rel="external nofollow" class="url">JpEncausse</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5779">
			October 21, 2013 at 21:40</a>		</div>

		<p>Hi,</p>
<p>1. With a basic setup using LEGO application, it works</p>
<p>2. With TestApplication I got the following error:</p>
<p>at MonoBrick.HidLib`2.Open() in TestApplicationusb.cs:line 186<br>
at MonoBrick.USB`2.Open() in TestApplicationusb.cs:line 84<br>
at Program.Main(String[] args) in TestApplicationProgram.cs:line 9<br>
Error: Failed to open connection<br>
Press any key to end…</p>
<p>I’m using:<br>
- Windows 7 64bit<br>
- Visual Studio Express 2012<br>
- dll files are copied in the debug folder<br>
- I changed compile option to x86</p>
<p>Any Idea ?</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5779#respond" onclick="return addComment.moveForm(&quot;div-comment-5779&quot;, &quot;5779&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2 parent" id="comment-5819">
				<div id="div-comment-5819" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5819">
			October 23, 2013 at 11:31</a>		</div>

		<p>First of all be sure not to be connected to the brick with the LEGO Software – you might even try to reboot your machine. If you are still not able to connect to the brick over USB try to locate the following code in USB.cs<br>
<code> ///<br>
</code></p><summary><code>
        /// Open the connection<br>
        /// </code></summary><code>
</code><p><code>        public override void Open(){<br>
            bool hasError = false;<br>
            try<br>
            {<br>
                device = HidApiNative.hid_open(this.vendorId, this.productId, IntPtr.Zero);<br>
                if(device != IntPtr.Zero){<br>
                    HidApiNative.hid_set_nonblocking(device,0);<br>
                }<br>
                else{<br>
                    hasError = true;<br>
                }<br>
            }<br>
            catch(Exception e) {<br>
                throw new ConnectionException(ConnectionError.OpenError, e);<br>
            }<br>
            if(hasError)<br>
                throw new ConnectionException(ConnectionError.OpenError);<br>
            isConnected = true;<br>
            ConnectionWasOpened();<br>
        }       </code> </p>
<p>What is the value of the device pointer? Are you getting an exception when you call the hid_open function – if yes what exception are you getting?</p>
<p>One last attempt could be to locate the hidapi.dll file in the lego software install directory. Copy/Replace that file with the one used by the MonoBrick communication library to see if it is a 64bit issue…</p>
<p>That is all I can think off right now. Please let me know how it goes</p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5819#respond" onclick="return addComment.moveForm(&quot;div-comment-5819&quot;, &quot;5819&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-twitter_jpencausse odd alt depth-3 parent" id="comment-5829">
				<div id="div-comment-5829" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/twitterProfilePhoto_normal.jpg" class="avatar avatar-60 photo " height="60" width="60">			<cite class="fn"><a href="https://twitter.com/JpEncausse" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;&#39;]);" rel="external nofollow" class="url">JpEncausse</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5829">
			October 23, 2013 at 21:35</a>		</div>

		<p>Well device == IntPtr.Zero so it set hasError to true.</p>
<p>I bought the wifi dongle, configure it, replacing “usb” by “wifi” in C# but it do not works. Same issue.</p>
<p>BTW, the wifi dongle is really crapy, I don’t understand LEGO, the Brick some times lost password after a reboot, the windows app is buggy, etc … was it the same with NTX ?</p>
<p>I don’t understand why they don’t care the community</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5829#respond" onclick="return addComment.moveForm(&quot;div-comment-5829&quot;, &quot;5829&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-4" id="comment-5837">
				<div id="div-comment-5837" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5837">
			October 24, 2013 at 07:19</a>		</div>

		<p>Hi Again </p>
<p>Concerning USB:</p>
<p>If you are getting a zero pointer and not an exception the DLL import of hidApi is working – are you sure nothing else is connected to the LEGO brick? Are you running as administrator? Anything else that you can think of that might prevent you from connecting to the EV3 </p>
<p>Concerning WiFi:</p>
<p>Have you disabled your firewall? Is the EV3 connected to your WiFi network? Are you able to connect to the EV3 over WiFi using the LEGO Software? Can you ping the EV3?</p>
<p>If you are able to connect to the EV3 using the Lego Software – then try connecting with MonoBrick while running Wireshark to see what is happening on the network. <a href="http://www.monobrick.dk/guides/how-to-establish-a-wifi-connection-with-the-ev3-brick/" rel="nofollow">This guide</a> will help you understand what you are suppose to see. </p>
<p>One last question are you able to connect over Bluetooth?</p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5837#respond" onclick="return addComment.moveForm(&quot;div-comment-5837&quot;, &quot;5837&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-5912">
				<div id="div-comment-5912" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5912">
			October 30, 2013 at 20:16</a>		</div>

		<p>This is fantastic, I have already played quite a bit with this and love it so far! Just one thing – it looks like in the monobrick download the GyroSensor isn’t public. (I’m using Visual Studio on Windows).<br>
If I write ‘var gyro = new GyroSensor(GyroMode.Angle);’, I get no intellisense on GyroSensor and a compilation error ‘Error	3	‘MonoBrick.EV3.GyroSensor’ is inaccessible due to its protection level	‘.<br>
It does show in the demo project though, so I’m guessing something is a little out of sync in the source?</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5912#respond" onclick="return addComment.moveForm(&quot;div-comment-5912&quot;, &quot;5912&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2" id="comment-5955">
				<div id="div-comment-5955" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-5955">
			November 1, 2013 at 23:05</a>		</div>

		<p>Hi Richard – thanks for noticing. I will fix this later this weekend. However the problem is not that the versions are out of sync, since they come from the same build. The problem is that the Gyro class has no access modifier (it should of course be public). In .net the default access modifier for a class is Internal. This means that the Gyro class is only “visible”/public within the same assembly. Since the test project includes the source files and is therefore build when you build the test project, it is in the same assembly, hence the Gyro class is visible. When you use a reference for MonoBrick.dll you are trying to use the Gyro class located within the MonoBrick.dll assembly, and since your program is not in the same assembly as the MonoBrick.dll the Gyro class is not visible.</p>
<p>Again thanks for pointing out this problem and I will upload a new release. In the meantime as you point out simply use the source files found in the test project as a workaround. </p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=5955#respond" onclick="return addComment.moveForm(&quot;div-comment-5955&quot;, &quot;5955&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-6338">
				<div id="div-comment-6338" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Sasanka Gottimukkala</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6338">
			November 21, 2013 at 19:39</a>		</div>

		<p>Hi Anders,</p>
<p>I really appreciate your work. Its really wonderful. I currently using your library.</p>
<p>I have a small question. I would like to know if it is possible to run the program on brick itself. I am asking this question since, I am trying to use your libraries for a robot maze competition. I am using Bluetooth for connectivity. It would have been really benifical (I know I am asking a lot) if I can transfer the entire program on to EV3. I hope I am making sense.</p>
<p>Thanks once again,</p>
<p>Best regards,<br>
Sasanka.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6338#respond" onclick="return addComment.moveForm(&quot;div-comment-6338&quot;, &quot;6338&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2" id="comment-6381">
				<div id="div-comment-6381" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6381">
			November 22, 2013 at 17:47</a>		</div>

		<p>Hi Sasanka</p>
<p>You are in luck. I am just about to release a firmware replacement for the EV3 that allows you to run on-brick programs written in C#/.NET. Please subscribe to facebook or twitter to get the latest news on when the firmware is released. </p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6381#respond" onclick="return addComment.moveForm(&quot;div-comment-6381&quot;, &quot;6381&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-6564">
				<div id="div-comment-6564" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Jony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6564">
			November 26, 2013 at 10:11</a>		</div>

		<p>Hi Anders, wonderful project! Could you describe the input and output data are transmitted and received from the controller NXT.</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6564#respond" onclick="return addComment.moveForm(&quot;div-comment-6564&quot;, &quot;6564&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2 parent" id="comment-6573">
				<div id="div-comment-6573" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6573">
			November 26, 2013 at 12:02</a>		</div>

		<p>Hi Jony</p>
<p>Thanks for visiting my site. I am not sure I understand your question. Please rephrase your question</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6573#respond" onclick="return addComment.moveForm(&quot;div-comment-6573&quot;, &quot;6573&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3 parent" id="comment-6642">
				<div id="div-comment-6642" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Jony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6642">
			November 27, 2013 at 03:43</a>		</div>

		<p>In what format do you send and receive data on the ARM microcontroller) I want to know the input parameters that you have processed and eventually made ​​the library)</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6642#respond" onclick="return addComment.moveForm(&quot;div-comment-6642&quot;, &quot;6642&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-4" id="comment-6716">
				<div id="div-comment-6716" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6716">
			November 27, 2013 at 18:59</a>		</div>

		<p>Download the test project it comes with the source code…</p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6716#respond" onclick="return addComment.moveForm(&quot;div-comment-6716&quot;, &quot;6716&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-6979">
				<div id="div-comment-6979" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://na/" onclick="javascript:_gaq.push([&#39;_trackEvent&#39;,&#39;outbound-commentauthor&#39;,&#39;&#39;]);" rel="external nofollow" class="url">Eduard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-6979">
			November 30, 2013 at 11:08</a>		</div>

		<p>Hello,</p>
<p>I am looking for some joystick samples !!</p>
<p>WKR,<br>
Eduard</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=6979#respond" onclick="return addComment.moveForm(&quot;div-comment-6979&quot;, &quot;6979&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2" id="comment-7081">
				<div id="div-comment-7081" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-7081">
			December 1, 2013 at 15:59</a>		</div>

		<p>I don’t have any samples for a joystick. But if you make some then please share and I will link to it..</p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=7081#respond" onclick="return addComment.moveForm(&quot;div-comment-7081&quot;, &quot;7081&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-9999">
				<div id="div-comment-9999" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Milo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-9999">
			April 10, 2014 at 12:27</a>		</div>

		<p>Hi Anders, how can I read from Infrared Sensor Beacon Mode – Proximity? In mode Seek method read() reads only Data – Heading and I need read Data – Proximity (distance from Sensor to beacon)<br>
Thank You</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=9999#respond" onclick="return addComment.moveForm(&quot;div-comment-9999&quot;, &quot;9999&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2" id="comment-10051">
				<div id="div-comment-10051" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-10051">
			April 13, 2014 at 19:07</a>		</div>

		<p>Please ask question in the forum…</p>
<p>Anders</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=10051#respond" onclick="return addComment.moveForm(&quot;div-comment-10051&quot;, &quot;10051&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-10335">
				<div id="div-comment-10335" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn">Carsten</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-10335">
			April 29, 2014 at 11:43</a>		</div>

		<p>Hello,</p>
<p>i got xamarin running, after a problem with copy the monoBrick.dll to the project.<br>
I opened a Csharp – Mono Projekt in Xamarin, right?</p>
<p>Copy the example code above and in the Release Option i got a Code signing error, with debug it works, but how can i start that on the Brick, nothing happend after pressing “play”. </p>
<p>Brick is connected via usb because bluetooth directly quit.</p>
<p>How can i say xamarin to start the program on the Brick?<br>
Thanks</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=10335#respond" onclick="return addComment.moveForm(&quot;div-comment-10335&quot;, &quot;10335&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-admin bypostauthor even depth-2" id="comment-10445">
				<div id="div-comment-10445" class="comment-body">
				<div class="comment-author vcard">
			<img alt="Author Image" title="Author Image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/author_default.jpg" class="avatar avatar-60 photo avatar-default" style="width:60px; height:60px">			<cite class="fn"><a href="http://www.monobrick.dk/" rel="external nofollow" class="url">Anders Søborg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#comment-10445">
			May 3, 2014 at 18:49</a>		</div>

		<p>Please post questions in the forum</p>

		<div class="reply">
			<a class="comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/?replytocom=10445#respond" onclick="return addComment.moveForm(&quot;div-comment-10445&quot;, &quot;10445&quot;, &quot;respond&quot;, &quot;1496&quot;)">Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	</ol>

	



									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.monobrick.dk/wp-comments-post.php" method="post" id="commentform" class="comment-form">
						<!--
   wsl_render_login_form
   WordPress Social Login Plugin ( WordPress Social Login 2.1.5 ) 
   http://wordpress.org/extend/plugins/wordpress-social-login/
-->
<style>
#wp-social-login-connect-with {font-weight: bold;}
#wp-social-login-connect-options {padding:10px;}
#wp-social-login-connect-options a {text-decoration: none;}
#wp-social-login-connect-options img {border:0 none;}
.wsl_connect_with_provider {}</style>
	<span id="wp-social-login-connect-with">Login with:</span>
	<div id="wp-social-login-connect-options">
				<a rel="nofollow" href="http://www.monobrick.dk/wp-login.php?action=wordpress_social_authenticate&provider=Facebook&redirect_to=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F" title="Connect with Facebook" class="wsl_connect_with_provider">
					<img alt="Facebook" title="Facebook" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/facebook.png">
				</a>
								<a rel="nofollow" href="http://www.monobrick.dk/wp-login.php?action=wordpress_social_authenticate&provider=Google&redirect_to=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F" title="Connect with Google" class="wsl_connect_with_provider">
					<img alt="Google" title="Google" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/google.png">
				</a>
								<a rel="nofollow" href="http://www.monobrick.dk/wp-login.php?action=wordpress_social_authenticate&provider=Twitter&redirect_to=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F" title="Connect with Twitter" class="wsl_connect_with_provider">
					<img alt="Twitter" title="Twitter" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/twitter.png">
				</a>
								<a rel="nofollow" href="http://www.monobrick.dk/wp-login.php?action=wordpress_social_authenticate&provider=LinkedIn&redirect_to=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F" title="Connect with LinkedIn" class="wsl_connect_with_provider">
					<img alt="LinkedIn" title="LinkedIn" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/linkedin.png">
				</a>
								<a rel="nofollow" href="http://www.monobrick.dk/wp-login.php?action=wordpress_social_authenticate&provider=Stackoverflow&redirect_to=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F" title="Connect with Stackoverflow" class="wsl_connect_with_provider">
					<img alt="Stackoverflow" title="Stackoverflow" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/stackoverflow.png">
				</a>
								<a rel="nofollow" href="http://www.monobrick.dk/wp-login.php?action=wordpress_social_authenticate&provider=GitHub&redirect_to=http%3A%2F%2Fwww.monobrick.dk%2Fguides%2Fcommunication-library-guides%2Fmonobrick-guide%2F" title="Connect with GitHub" class="wsl_connect_with_provider">
					<img alt="GitHub" title="GitHub" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/github.png">
				</a>
					</div> 
<!-- /wsl_render_login_form -->  
													<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name</label> <span class="required">*</span><input id="author" name="author" type="text" value="" size="30"></p>
<p class="comment-form-email"><label for="email">E-mail</label> <span class="required">*</span><input id="email" name="email" type="text" value="" size="30"></p>
<p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30"></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href="" title=""&gt; &lt;abbr title=""&gt; &lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=""&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=""&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment">
							<input type="hidden" name="comment_post_ID" value="1496" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a961e25174"></p><script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/form.js"></script>
<p style="display: none;"></p>					<input type="hidden" id="ak_js" name="ak_js" value="1410754772088"></form>
							</div><!-- #respond -->
			        <script type="text/javascript">
            jQuery(document).ready(function () {
                jQuery('#commentform').submit(function () {
                    _gaq.push(
                            ['_setAccount', 'UA-42606992-1'],
                            ['_trackEvent', 'comment', 'submit']
                    );
                });
            });
        </script>
		

			
		
</div><!-- end of #content -->


	<div id="widgets" class="grid col-300 fit">
		
		<div id="text-20" class="widget-wrapper widget_text">			<div class="textwidget"><!--MonoBrick-->
<div class="downloadbox">
    <img src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/monobrick.png"><table>
    
</table>
</div></div>
		</div><div id="paypal_donations-2" class="widget-wrapper widget_paypal_donations"><div class="widget-title"><h3>Make a donation</h3></div><!-- Begin PayPal Donations by http://johansteen.se/ -->
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
    <div class="paypal-donations">
        <input type="hidden" name="cmd" value="_donations">
        <input type="hidden" name="business" value="anders@mindstorms.dk">
<input type="hidden" name="item_name" value="Support Mindstorms.dk"><input type="hidden" name="amount" value="5"><input type="hidden" name="currency_code" value="USD"><input type="image" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/paypal_medium.png" name="submit" alt="PayPal - The safer, easier way to pay online."><img alt="" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/pixel.gif" width="1" height="1">    </div>
</form>
<!-- End PayPal Donations -->
</div><div id="text-23" class="widget-wrapper widget_text"><div class="widget-title"><h3>Download</h3></div>			<div class="textwidget"><!--MonoBrick-->
<div class="downloadbox">
    <div id="wpdm_file_31" class="wpdm_file wpdm-only-button"><div class="cont"><div class="btn_outer"><div class="btn_outer_c" style=""><a class="btn_left  has-counter" rel="31" title="MonoBrick" href="http://www.monobrick.dk/?wpdmact=process&did=MzEuaG90bGluaw==">Library DLL</a><span class="btn_right counter">3320 downloads</span></div></div><div class="clear"></div></div></div><div id="wpdm_file_32" class="wpdm_file wpdm-only-button"><div class="cont"><div class="btn_outer"><div class="btn_outer_c" style=""><a class="btn_left  has-counter" rel="32" title="MonoBrickAndroid" href="http://www.monobrick.dk/?wpdmact=process&did=MzIuaG90bGluaw==">Android<br>Library DLL</a><span class="btn_right counter">938 downloads</span></div></div><div class="clear"></div></div></div><div id="wpdm_file_33" class="wpdm_file wpdm-only-button"><div class="cont"><div class="btn_outer"><div class="btn_outer_c" style=""><a class="btn_left  has-counter" rel="33" title="MonoBrickTestProject" href="http://www.monobrick.dk/?wpdmact=process&did=MzMuaG90bGluaw==">Test Project</a><span class="btn_right counter">3090 downloads</span></div></div><div class="clear"></div></div></div><table>
    
    
    
 </table>
</div></div>
		</div><div id="text-40" class="widget-wrapper widget_text"><div class="widget-title"><h3>MailBox Sample</h3></div>			<div class="textwidget"><!--MonoBrick communication library guide-->
<div class="downloadbox">
    <div id="wpdm_file_46" class="wpdm_file wpdm-only-button"><div class="cont"><div class="btn_outer"><div class="btn_outer_c" style=""><a class="btn_left  has-counter" rel="46" title="MailBox Sample for MonoBrick Communication library" href="http://www.monobrick.dk/?wpdmact=process&did=NDYuaG90bGluaw==">MailBox EV3 Program</a><span class="btn_right counter">210 downloads</span></div></div><div class="clear"></div></div></div><table>
     
    </table>
</div></div>
		</div><div id="social-widget-2" class="widget-wrapper Social_Widget"><div class="widget-title"><h3>Follow</h3></div><div class="socialmedia-buttons smw_left"><a href="http://www.facebook.com/monobrick.dk" rel="nofollow" target="_blank"><img width="32" height="32" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/facebook(1).png" alt=" Facebook" title=" Facebook" class="scale"></a><a href="http://twitter.com/MindstormsDK" rel="nofollow" target="_blank"><img width="32" height="32" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/twitter(1).png" alt=" Twitter" title=" Twitter" class="scale"></a><a href="http://www.youtube.com/user/210253" rel="nofollow" target="_blank"><img width="32" height="32" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/youtube.png" alt=" YouTube" title=" YouTube" class="scale"></a><a href="mailto:anders@mindstorms.dk" rel="nofollow" target="_blank"><img width="32" height="32" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/email.png" alt=" E-mail" title=" E-mail" class="scale"></a></div></div>
			</div><!-- end of #widgets -->
</div><!-- end of #wrapper -->
</div><!-- end of #container -->

<div id="footer" class="clearfix">
	
	<div id="footer-wrapper">

		
		<div class="grid col-940">

			<div class="grid col-540">
							</div>
			<!-- end of col-540 -->

			<div class="grid col-380 fit">
				<ul class="social-icons"></ul><!-- end of .social-icons -->			</div>
			<!-- end of col-380 fit -->

		</div>
		<!-- end of col-940 -->
		
		<div class="grid col-300 copyright">
			© 2014<a href="http://www.monobrick.dk/" title="MonoBrick.DK">
				MonoBrick.DK			</a>
		</div>
		<!-- end of .copyright -->

		<div class="grid col-300 scroll-top"><a href="http://www.monobrick.dk/guides/communication-library-guides/monobrick-guide/#scroll-top" title="scroll to top">↑</a></div>

		<div class="grid col-300 fit powered">
			LEGO® does not sponsor, authorise or endorse this site
		</div>
		<!-- end .powered -->

	</div>
	<!-- end #footer-wrapper -->

	</div><!-- end #footer -->

<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shCore.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushCSharp.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushPhp.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushJScript.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushJava.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushVb.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushSql.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushXml.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushDelphi.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushPython.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushRuby.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushCss.js"></script>
<script class="javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/shBrushCpp.js"></script>
<script class="javascript">
dp.SyntaxHighlighter.ClipboardSwf = 'http://www.monobrick.dk/wp-content/plugins/google-syntax-highlighter/Scripts/clipboard.swf';
dp.SyntaxHighlighter.HighlightAll('code');
</script><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style><style>.dp-c .vars { color: #d00; }</style>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/editor.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var thickboxL10n = {"next":"Next >","prev":"< Prev","image":"Image","of":"of","close":"Close","noiframes":"This feature requires inline frames. You have iframes disabled or your browser does not support them.","loadingAnimation":"http:\/\/www.monobrick.dk\/wp-includes\/js\/thickbox\/loadingAnimation.gif","closeImage":"http:\/\/www.monobrick.dk\/wp-includes\/js\/thickbox\/tb-close.png"};
/* ]]> */
</script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/thickbox.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/responsive-scripts.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.fancybox-1.3.6.pack.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.easing.pack.js"></script>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/jquery.mousewheel.pack.js"></script>

	<!-- start miniAudioPlayer initializer -->
	
	<style>
	/*++++++++++++++++++++++++++++++++++++++++++++++++++
MAP custom skin: mySkin
http://pupunzi.com/mb.components/mb.miniAudioPlayer/demo/skinMaker.html

background: rgba(235, 21, 21, 1)
icons: rgba(255, 254, 250, 1)
border: rgba(235, 101, 110, 1)
borderLeft: rgba(230, 3, 3, 1)
borderRight: rgba(184, 14, 14, 1)
mute: rgba(255, 61, 61, 1)
download: rgba(212, 32, 38, 0.48)
downloadHover: rgba(255, 3, 3, 1)
++++++++++++++++++++++++++++++++++++++++++++++++++*/

/* Older browser (IE8) not supporting rgba() */
.mbMiniPlayer.mySkin.shadow table{box-shadow:0 0 3px #1c0606;}
.mbMiniPlayer.mySkin table span{background-color:#eb1515;}
.mbMiniPlayer.mySkin table span.map_play{border-left:1px solid #e60303;}
.mbMiniPlayer.mySkin table span.map_volume{border-right:1px solid #b80e0e;}
.mbMiniPlayer.mySkin table span.map_volume.mute{color: #ff3d3d;}
.mbMiniPlayer.mySkin .map_download{color: #d42026;}
.mbMiniPlayer.mySkin .map_download:hover{color: #ff0303;}
.mbMiniPlayer.mySkin table span{color: #fffefa;}
.mbMiniPlayer.mySkin table {border: 1px solid #eb656e !important;}

/*++++++++++++++++++++++++++++++++++++++++++++++++*/

.mbMiniPlayer.mySkin table{background-color:transparent;}
.mbMiniPlayer.mySkin.shadow table{box-shadow:0 0 3px rgba(28, 6, 6, 0.01);}
.mbMiniPlayer.mySkin table span{background-color:rgba(235, 21, 21, 1);}
.mbMiniPlayer.mySkin table span.map_play{border-left:1px solid rgba(230, 3, 3, 1);}
.mbMiniPlayer.mySkin table span.map_volume{border-right:1px solid rgba(184, 14, 14, 1);}
.mbMiniPlayer.mySkin table span.map_volume.mute{color: rgba(255, 61, 61, 1);}
.mbMiniPlayer.mySkin .map_download{color: rgba(212, 32, 38, 0.48);}
.mbMiniPlayer.mySkin .map_download:hover{color: rgba(255, 3, 3, 1);}
.mbMiniPlayer.mySkin table span{color: rgba(255, 254, 250, 1);text-shadow: 1px -1px 1px rgba(189, 11, 11, 1)!important;}
.mbMiniPlayer.mySkin table span{color: rgba(255, 254, 250, 1);}
.mbMiniPlayer.mySkin table {border: 1px solid rgba(235, 101, 110, 1) !important;}
.mbMiniPlayer.mySkin table span.map_title{color: #000; text-shadow:none!important}
/*++++++++++++++++++++++++++++++++++++++++++++++++*/
	</style>

	<script type="text/javascript">

    function initializeMiniAudioPlayer(){
         jQuery("a[href*='.mp3'] ,a[href*='.m4a']").not(".map_excuded").mb_miniPlayer({
				inLine:true,
                width:"200",
				skin:"black",
				animate:true,
				volume:.2,
				autoplay:false,
				showVolumeLevel:true,
				showTime:true,
				id3:false,
				showRew:true,
				downloadable:false,
				downloadPage:"http://www.monobrick.dk/wp-content/plugins/wp-miniaudioplayer/map_download.php",
				swfPath:"http://www.monobrick.dk/wp-content/plugins/wp-miniaudioplayer/js/",
				onReady: function(player, $controlsBox){
				   if(player.opt.downloadable && player.opt.downloadablesecurity && !false){
				        jQuery(".map_download", $controlsBox).remove();
				   }
				}
		});
    }

	jQuery(function(){
          initializeMiniAudioPlayer();
          jQuery(document).ajaxSuccess(function(event, xhr, settings) {
           	initializeMiniAudioPlayer();
          });
	});
	</script>
	<!-- end miniAudioPlayer initializer -->

	<div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_http" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_http" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/ZEbdHPQfV3x.htm" style="border: none;"></iframe><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/ZEbdHPQfV3x(1).htm" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div>
<script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/widgets.js"></script><script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/all.js"></script><script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/plusone.js" gapi_processed="true"></script><script type="text/javascript" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/in.js"></script>
<script type="text/javascript">
jQuery(document).on('ready post-load', easy_fancybox_handler );
</script>


<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

 Served from: www.monobrick.dk @ 2014-09-15 04:19:28 by W3 Total Cache --><div id="fancybox-tmp"></div><div id="fancybox-loading"><div></div></div><div id="fancybox-overlay"></div><div id="fancybox-wrap"><div id="fancybox-outer"><div class="fancybox-bg" id="fancybox-bg-n"></div><div class="fancybox-bg" id="fancybox-bg-ne"></div><div class="fancybox-bg" id="fancybox-bg-e"></div><div class="fancybox-bg" id="fancybox-bg-se"></div><div class="fancybox-bg" id="fancybox-bg-s"></div><div class="fancybox-bg" id="fancybox-bg-sw"></div><div class="fancybox-bg" id="fancybox-bg-w"></div><div class="fancybox-bg" id="fancybox-bg-nw"></div><div id="fancybox-content"></div><a id="fancybox-close"></a><div id="fancybox-title"></div><a href="javascript:;" id="fancybox-left"><span class="fancy-ico" id="fancybox-left-ico"></span></a><a href="javascript:;" id="fancybox-right"><span class="fancy-ico" id="fancybox-right-ico"></span></a></div></div><iframe name="oauth2relay783534960" id="oauth2relay783534960" src="./MonoBrick Communication Library Programming Guide   MonoBrick.DK_files/postmessageRelay.htm" tabindex="-1" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe></body></html>